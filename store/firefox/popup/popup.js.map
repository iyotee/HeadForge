{"version":3,"file":"popup/popup.js","mappings":"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","sources":["webpack://headforge/webpack/runtime/chunk loaded","webpack://headforge/./src/utils/constants.ts","webpack://headforge/./src/utils/date-utils.ts","webpack://headforge/./src/utils/clipboard.ts","webpack://headforge/./src/utils/file-utils.ts","webpack://headforge/./src/utils/update-checker.ts","webpack://headforge/./src/popup/components/update-checker.ts","webpack://headforge/./src/popup/popup.ts","webpack://headforge/webpack/bootstrap","webpack://headforge/webpack/runtime/define property getters","webpack://headforge/webpack/runtime/hasOwnProperty shorthand","webpack://headforge/webpack/runtime/jsonp chunk loading","webpack://headforge/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export const EXTENSION_NAME = 'HeadForge';\nexport const EXTENSION_VERSION = '1.0.0';\nexport const EXTENSION_AUTHOR = 'Satoshiba';\n\n// Storage keys\nexport const STORAGE_KEYS = {\n  USER_PREFERENCES: 'headforge_user_preferences',\n  LAST_HEADER_DATA: 'headforge_last_header_data',\n  TEMPLATE_CUSTOMIZATIONS: 'headforge_template_customizations',\n  EXPORT_HISTORY: 'headforge_export_history',\n  THEME_SETTINGS: 'headforge_theme_settings'\n} as const;\n\n// Default values\nexport const DEFAULT_VALUES = {\n  AUTHOR: 'Satoshiba',\n  PROJECT: 'SYNCLY - YouTube PVR Extension',\n  VERSION: '1.0.0',\n  LICENSE: 'MIT',\n  STATUS: 'Development',\n  PLATFORM: ['Chrome', 'Firefox', 'Edge', 'Brave'],\n  LANGUAGE: 'javascript',\n  THEME: 'light' as const,\n  EXPORT_FORMAT: 'clipboard' as const\n} as const;\n\n// License options\nexport const LICENSE_OPTIONS = [\n  { value: 'MIT', label: 'MIT License' },\n  { value: 'GPL-3.0', label: 'GNU General Public License v3.0' },\n  { value: 'Apache-2.0', label: 'Apache License 2.0' },\n  { value: 'BSD-3-Clause', label: 'BSD 3-Clause License' },\n  { value: 'ISC', label: 'ISC License' },\n  { value: 'Unlicense', label: 'The Unlicense' },\n  { value: 'Custom', label: 'Custom License' }\n] as const;\n\n// Status options\nexport const STATUS_OPTIONS = [\n  { value: 'Development', label: 'Development' },\n  { value: 'Stable', label: 'Stable' },\n  { value: 'Beta', label: 'Beta' },\n  { value: 'Deprecated', label: 'Deprecated' },\n  { value: 'Maintenance', label: 'Maintenance' }\n] as const;\n\n// Platform options\nexport const PLATFORM_OPTIONS = [\n  { value: 'Chrome', label: 'Chrome' },\n  { value: 'Firefox', label: 'Firefox' },\n  { value: 'Edge', label: 'Edge' },\n  { value: 'Brave', label: 'Brave' }\n] as const;\n\n\n// Export format options\nexport const EXPORT_FORMAT_OPTIONS = [\n  { value: 'clipboard', label: 'Copy to Clipboard' },\n  { value: 'file', label: 'Save as File' },\n  { value: 'insert', label: 'Insert into Editor' }\n] as const;\n\n// UI Constants\nexport const UI_CONSTANTS = {\n  POPUP_WIDTH: 400,\n  POPUP_HEIGHT: 600,\n  MAX_PREVIEW_LINES: 20,\n  ANIMATION_DURATION: 300,\n  DEBOUNCE_DELAY: 500\n} as const;\n\n// Validation limits\nexport const VALIDATION_LIMITS = {\n  MAX_FILENAME_LENGTH: 255,\n  MAX_DESCRIPTION_LENGTH: 1000,\n  MAX_USAGE_LENGTH: 2000,\n  MAX_NOTES_LENGTH: 1000,\n  MAX_TODO_LENGTH: 1000,\n  MAX_DEPENDENCIES_LENGTH: 500\n} as const;\n\n// File extensions mapping\nexport const FILE_EXTENSIONS = {\n  javascript: '.js',\n  typescript: '.ts',\n  html: '.html',\n  css: '.css',\n  scss: '.scss',\n  jsx: '.jsx',\n  tsx: '.tsx',\n  vue: '.vue',\n  python: '.py',\n  java: '.java',\n  csharp: '.cs',\n  cpp: '.cpp',\n  c: '.c',\n  go: '.go',\n  rust: '.rs',\n  php: '.php',\n  ruby: '.rb',\n  nodejs: '.js',\n  kotlin: '.kt',\n  swift: '.swift',\n  sql: '.sql',\n  graphql: '.graphql',\n  dockerfile: 'Dockerfile',\n  yaml: '.yml',\n  json: '.json',\n  bash: '.sh',\n  powershell: '.ps1',\n  r: '.r',\n  lua: '.lua',\n  perl: '.pl',\n  haskell: '.hs'\n} as const;\n\n// Message types for communication between components\nexport const MESSAGE_TYPES = {\n  GENERATE_HEADER: 'GENERATE_HEADER',\n  EXPORT_HEADER: 'EXPORT_HEADER',\n  SAVE_PREFERENCES: 'SAVE_PREFERENCES',\n  LOAD_PREFERENCES: 'LOAD_PREFERENCES',\n  UPDATE_THEME: 'UPDATE_THEME',\n  VALIDATE_DATA: 'VALIDATE_DATA',\n  GET_LANGUAGES: 'GET_LANGUAGES',\n  GET_TEMPLATE: 'GET_TEMPLATE'\n} as const;\n\n// Error messages\nexport const ERROR_MESSAGES = {\n  GENERIC_ERROR: 'An unexpected error occurred',\n  VALIDATION_ERROR: 'Please check your input and try again',\n  EXPORT_ERROR: 'Failed to export header',\n  SAVE_ERROR: 'Failed to save preferences',\n  LOAD_ERROR: 'Failed to load preferences',\n  NETWORK_ERROR: 'Network error occurred',\n  PERMISSION_ERROR: 'Permission denied',\n  STORAGE_ERROR: 'Storage error occurred'\n} as const;\n\n// Success messages\nexport const SUCCESS_MESSAGES = {\n  HEADER_GENERATED: 'Header generated successfully',\n  HEADER_COPIED: 'Header copied to clipboard',\n  HEADER_SAVED: 'Header saved successfully',\n  PREFERENCES_SAVED: 'Preferences saved successfully',\n  EXPORT_SUCCESS: 'Export completed successfully'\n} as const;\n\n// CSS class names\nexport const CSS_CLASSES = {\n  THEME_LIGHT: 'theme-light',\n  THEME_DARK: 'theme-dark',\n  // THEME_AUTO removed - only light and dark themes now\n  ANIMATION_FADE_IN: 'fade-in',\n  ANIMATION_SLIDE_UP: 'slide-up',\n  ANIMATION_BOUNCE: 'bounce',\n  LOADING: 'loading',\n  ERROR: 'error',\n  SUCCESS: 'success',\n  WARNING: 'warning'\n} as const;\n\n// Keyboard shortcuts\nexport const KEYBOARD_SHORTCUTS = {\n  GENERATE: 'Ctrl+Enter',\n  COPY: 'Ctrl+C',\n  SAVE: 'Ctrl+S',\n  NEW: 'Ctrl+N',\n  PREVIEW: 'Ctrl+P'\n} as const;\n\n// API endpoints (for future use)\nexport const API_ENDPOINTS = {\n  TEMPLATES: '/api/templates',\n  LANGUAGES: '/api/languages',\n  VALIDATE: '/api/validate',\n  EXPORT: '/api/export'\n} as const;\n\n// Feature flags\nexport const FEATURE_FLAGS = {\n  ENABLE_CLOUD_SYNC: false,\n  ENABLE_TEAM_TEMPLATES: false,\n  ENABLE_ANALYTICS: false,\n  ENABLE_BETA_FEATURES: false\n} as const;\n\n// Default settings\n// Function to detect system theme preference\nconst getSystemTheme = (): 'light' | 'dark' => {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  }\n  return 'light'; // fallback\n};\n\nexport const DEFAULT_SETTINGS = {\n  theme: getSystemTheme(),\n  fontSize: 'medium' as const,\n  popupWidth: 400,\n  popupHeight: 600,\n  compactMode: false,\n  showPreview: true,\n  animations: true,\n  highContrast: false,\n  accentColor: '#007bff',\n  debugMode: false,\n  performanceMonitoring: false,\n  cacheSize: 10,\n  maxHistory: 100,\n  autoSave: true,\n  autoSaveDelay: 1000,\n  experimentalFeatures: false,\n  telemetry: false,\n  updateFrequency: 'weekly' as const,\n  backupFrequency: 'monthly' as const,\n  strictValidation: false,\n  timeoutDuration: 5000,\n  maxRetries: 3,\n  defaultLicense: 'MIT',\n  defaultLanguage: 'javascript',\n  exportFormat: 'clipboard' as const,\n  autoFillDates: true,\n  rememberLastValues: true,\n  defaultAuthor: '',\n  defaultProject: '',\n  autoDeactivateDuration: 180000 // 3 minutes in milliseconds\n} as const;\n\n// Default header data\nexport const DEFAULT_HEADER_DATA = {\n  fileName: '',\n  project: '',\n  author: '',\n  creationDate: '',\n  lastUpdated: '',\n  version: '1.0.0',\n  description: '',\n  dependencies: '',\n  license: 'MIT',\n  status: 'Development',\n  language: 'javascript',\n  usage: '',\n  notes: '',\n  todo: '',\n  headerType: 'simple' as const\n} as const;\n\n// Licenses\nexport const LICENSES = [\n  'MIT',\n  'GPL-3.0',\n  'Apache-2.0',\n  'BSD-3-Clause',\n  'ISC',\n  'Unlicense',\n  'Custom'\n] as const;\n\n\n// Platforms\nexport const PLATFORMS = [\n  'Chrome',\n  'Firefox',\n  'Edge',\n  'Brave'\n] as const;\n\n// Export options\nexport const EXPORT_OPTIONS = [\n  'clipboard',\n  'file',\n  'insert'\n] as const;\n","export const DateUtils = {\r\n  getCurrentDate,\r\n  formatDate,\r\n  formatDateTime,\r\n  parseDate,\r\n  isValidDateString,\r\n  getRelativeDate,\r\n  addDays,\r\n  subtractDays,\r\n  isDateInRange,\r\n  getDateDifference\r\n};\r\n\r\nexport function getCurrentDate(): string {\r\n  const now = new Date();\r\n  return formatDate(now);\r\n}\r\n\r\nexport function formatDate(date: Date): string {\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  \r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nexport function formatDateTime(date: Date): string {\r\n  const dateStr = formatDate(date);\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n  \r\n  return `${dateStr} ${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\nexport function parseDate(dateString: string): Date | null {\r\n  const date = new Date(dateString);\r\n  return isNaN(date.getTime()) ? null : date;\r\n}\r\n\r\nexport function isValidDateString(dateString: string): boolean {\r\n  return parseDate(dateString) !== null;\r\n}\r\n\r\nexport function getRelativeDate(date: Date): string {\r\n  const now = new Date();\r\n  const diffInMs = now.getTime() - date.getTime();\r\n  const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));\r\n  \r\n  if (diffInDays === 0) {\r\n    return 'Today';\r\n  } else if (diffInDays === 1) {\r\n    return 'Yesterday';\r\n  } else if (diffInDays < 7) {\r\n    return `${diffInDays} days ago`;\r\n  } else if (diffInDays < 30) {\r\n    const weeks = Math.floor(diffInDays / 7);\r\n    return `${weeks} week${weeks > 1 ? 's' : ''} ago`;\r\n  } else if (diffInDays < 365) {\r\n    const months = Math.floor(diffInDays / 30);\r\n    return `${months} month${months > 1 ? 's' : ''} ago`;\r\n  } else {\r\n    const years = Math.floor(diffInDays / 365);\r\n    return `${years} year${years > 1 ? 's' : ''} ago`;\r\n  }\r\n}\r\n\r\nexport function addDays(date: Date, days: number): Date {\r\n  const result = new Date(date);\r\n  result.setDate(result.getDate() + days);\r\n  return result;\r\n}\r\n\r\nexport function addMonths(date: Date, months: number): Date {\r\n  const result = new Date(date);\r\n  result.setMonth(result.getMonth() + months);\r\n  return result;\r\n}\r\n\r\nexport function addYears(date: Date, years: number): Date {\r\n  const result = new Date(date);\r\n  result.setFullYear(result.getFullYear() + years);\r\n  return result;\r\n}\r\n\r\nexport function getStartOfDay(date: Date): Date {\r\n  const result = new Date(date);\r\n  result.setHours(0, 0, 0, 0);\r\n  return result;\r\n}\r\n\r\nexport function getEndOfDay(date: Date): Date {\r\n  const result = new Date(date);\r\n  result.setHours(23, 59, 59, 999);\r\n  return result;\r\n}\r\n\r\nexport function getStartOfWeek(date: Date): Date {\r\n  const result = new Date(date);\r\n  const day = result.getDay();\r\n  const diff = result.getDate() - day;\r\n  result.setDate(diff);\r\n  return getStartOfDay(result);\r\n}\r\n\r\nexport function getEndOfWeek(date: Date): Date {\r\n  const result = new Date(date);\r\n  const day = result.getDay();\r\n  const diff = result.getDate() - day + 6;\r\n  result.setDate(diff);\r\n  return getEndOfDay(result);\r\n}\r\n\r\nexport function getStartOfMonth(date: Date): Date {\r\n  const result = new Date(date);\r\n  result.setDate(1);\r\n  return getStartOfDay(result);\r\n}\r\n\r\nexport function getEndOfMonth(date: Date): Date {\r\n  const result = new Date(date);\r\n  result.setMonth(result.getMonth() + 1, 0);\r\n  return getEndOfDay(result);\r\n}\r\n\r\nexport function getStartOfYear(date: Date): Date {\r\n  const result = new Date(date);\r\n  result.setMonth(0, 1);\r\n  return getStartOfDay(result);\r\n}\r\n\r\nexport function getEndOfYear(date: Date): Date {\r\n  const result = new Date(date);\r\n  result.setMonth(11, 31);\r\n  return getEndOfDay(result);\r\n}\r\n\r\nexport function isToday(date: Date): boolean {\r\n  const today = new Date();\r\n  return date.toDateString() === today.toDateString();\r\n}\r\n\r\nexport function isYesterday(date: Date): boolean {\r\n  const yesterday = addDays(new Date(), -1);\r\n  return date.toDateString() === yesterday.toDateString();\r\n}\r\n\r\nexport function isThisWeek(date: Date): boolean {\r\n  const startOfWeek = getStartOfWeek(new Date());\r\n  const endOfWeek = getEndOfWeek(new Date());\r\n  return date >= startOfWeek && date <= endOfWeek;\r\n}\r\n\r\nexport function isThisMonth(date: Date): boolean {\r\n  const startOfMonth = getStartOfMonth(new Date());\r\n  const endOfMonth = getEndOfMonth(new Date());\r\n  return date >= startOfMonth && date <= endOfMonth;\r\n}\r\n\r\nexport function isThisYear(date: Date): boolean {\r\n  const startOfYear = getStartOfYear(new Date());\r\n  const endOfYear = getEndOfYear(new Date());\r\n  return date >= startOfYear && date <= endOfYear;\r\n}\r\n\r\nexport function getDaysBetween(date1: Date, date2: Date): number {\r\n  const diffInMs = Math.abs(date2.getTime() - date1.getTime());\r\n  return Math.floor(diffInMs / (1000 * 60 * 60 * 24));\r\n}\r\n\r\nexport function getMonthsBetween(date1: Date, date2: Date): number {\r\n  const yearDiff = date2.getFullYear() - date1.getFullYear();\r\n  const monthDiff = date2.getMonth() - date1.getMonth();\r\n  return yearDiff * 12 + monthDiff;\r\n}\r\n\r\nexport function getYearsBetween(date1: Date, date2: Date): number {\r\n  const yearDiff = date2.getFullYear() - date1.getFullYear();\r\n  const monthDiff = date2.getMonth() - date1.getMonth();\r\n  \r\n  if (monthDiff < 0 || (monthDiff === 0 && date2.getDate() < date1.getDate())) {\r\n    return yearDiff - 1;\r\n  }\r\n  \r\n  return yearDiff;\r\n}\r\n\r\nexport function formatDateRange(startDate: Date, endDate: Date): string {\r\n  const start = formatDate(startDate);\r\n  const end = formatDate(endDate);\r\n  \r\n  if (start === end) {\r\n    return start;\r\n  }\r\n  \r\n  return `${start} - ${end}`;\r\n}\r\n\r\nexport function getDateFromInput(inputValue: string): Date | null {\r\n  if (!inputValue) {\r\n    return null;\r\n  }\r\n  \r\n  // Handle different input formats\r\n  const date = new Date(inputValue);\r\n  \r\n  if (isNaN(date.getTime())) {\r\n    return null;\r\n  }\r\n  \r\n  return date;\r\n}\r\n\r\nexport function setDateToInput(date: Date): string {\r\n  return formatDate(date);\r\n}\r\n\r\nexport function getCurrentTimestamp(): number {\r\n  return Date.now();\r\n}\r\n\r\nexport function formatTimestamp(timestamp: number): string {\r\n  const date = new Date(timestamp);\r\n  return formatDateTime(date);\r\n}\r\n\r\nexport function getTimestampFromDate(date: Date): number {\r\n  return date.getTime();\r\n}\r\n\r\nexport function getDateFromTimestamp(timestamp: number): Date {\r\n  return new Date(timestamp);\r\n}\r\n\r\nexport function subtractDays(date: Date, days: number): Date {\r\n  const result = new Date(date);\r\n  result.setDate(result.getDate() - days);\r\n  return result;\r\n}\r\n\r\nexport function isDateInRange(date: Date, startDate: Date, endDate: Date): boolean {\r\n  return date >= startDate && date <= endDate;\r\n}\r\n\r\nexport function getDateDifference(date1: Date, date2: Date): number {\r\n  return Math.abs(date1.getTime() - date2.getTime());\r\n}","export async function copyToClipboard(text: string): Promise<void> {\n  try {\n    // For extensions, try the fallback method first as it's more reliable\n    if (typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.id) {\n      // We're in a browser extension context\n      await fallbackCopyToClipboard(text);\n      return;\n    }\n    \n    // Use the modern Clipboard API if available and in secure context\n    if (navigator.clipboard && window.isSecureContext) {\n      try {\n        await navigator.clipboard.writeText(text);\n        return;\n      } catch (clipboardError) {\n        console.warn('Clipboard API failed, trying fallback:', clipboardError);\n        // Fall through to fallback method\n      }\n    }\n    \n    // Fallback for older browsers or non-secure contexts\n    await fallbackCopyToClipboard(text);\n  } catch (error) {\n    console.error('Failed to copy to clipboard:', error);\n    throw new Error(`Failed to copy to clipboard: ${error instanceof Error ? error.message : String(error)}`);\n  }\n}\n\nasync function fallbackCopyToClipboard(text: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Create a temporary textarea element\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    \n    // Style the textarea to be invisible but still functional\n    textArea.style.position = 'fixed';\n    textArea.style.left = '-999999px';\n    textArea.style.top = '-999999px';\n    textArea.style.opacity = '0';\n    textArea.style.pointerEvents = 'none';\n    textArea.style.zIndex = '-1000';\n    textArea.setAttribute('readonly', '');\n    \n    document.body.appendChild(textArea);\n    \n    try {\n      // Select and copy the text\n      textArea.focus();\n      textArea.select();\n      textArea.setSelectionRange(0, text.length); // Select all text\n      \n      // Use execCommand for copying (more reliable in extensions)\n      const successful = document.execCommand('copy');\n      \n      if (successful) {\n        resolve();\n      } else {\n        reject(new Error('execCommand copy failed'));\n      }\n    } catch (error) {\n      reject(new Error(`Copy failed: ${error instanceof Error ? error.message : String(error)}`));\n    } finally {\n      // Clean up\n      if (document.body.contains(textArea)) {\n        document.body.removeChild(textArea);\n      }\n    }\n  });\n}\n\nexport async function readFromClipboard(): Promise<string> {\n  try {\n    // Use the modern Clipboard API if available\n    if (navigator.clipboard && window.isSecureContext) {\n      const text = await navigator.clipboard.readText();\n      return text;\n    }\n    \n    throw new Error('Clipboard API not available');\n  } catch (error) {\n    console.error('Failed to read from clipboard:', error);\n    throw new Error('Failed to read from clipboard');\n  }\n}\n\nexport const ClipboardUtils = {\n  copyToClipboard,\n  readFromClipboard,\n  copyImageToClipboard,\n  isClipboardSupported,\n  isClipboardReadSupported,\n  isClipboardWriteSupported\n};\n\nexport function isClipboardSupported(): boolean {\n  return !!(navigator.clipboard && window.isSecureContext);\n}\n\nexport function isClipboardReadSupported(): boolean {\n  return !!(navigator.clipboard && typeof navigator.clipboard.readText === 'function' && window.isSecureContext);\n}\n\nexport function isClipboardWriteSupported(): boolean {\n  return !!(navigator.clipboard && typeof navigator.clipboard.writeText === 'function' && window.isSecureContext);\n}\n\nexport async function copyImageToClipboard(imageBlob: Blob): Promise<void> {\n  try {\n    if (navigator.clipboard && window.isSecureContext) {\n      const clipboardItem = new ClipboardItem({\n        [imageBlob.type]: imageBlob\n      });\n      \n      await navigator.clipboard.write([clipboardItem]);\n    } else {\n      throw new Error('Clipboard API not available for images');\n    }\n  } catch (error) {\n    console.error('Failed to copy image to clipboard:', error);\n    throw new Error('Failed to copy image to clipboard');\n  }\n}\n\nexport async function copyHtmlToClipboard(html: string, plainText?: string): Promise<void> {\n  try {\n    if (navigator.clipboard && window.isSecureContext) {\n      const clipboardItem = new ClipboardItem({\n        'text/html': new Blob([html], { type: 'text/html' }),\n        'text/plain': new Blob([plainText || html], { type: 'text/plain' })\n      });\n      \n      await navigator.clipboard.write([clipboardItem]);\n    } else {\n      // Fallback to plain text\n      await copyToClipboard(plainText || html);\n    }\n  } catch (error) {\n    console.error('Failed to copy HTML to clipboard:', error);\n    throw new Error('Failed to copy HTML to clipboard');\n  }\n}\n\nexport function getClipboardPermission(): Promise<PermissionState> {\n  return navigator.permissions.query({ name: 'clipboard-write' as PermissionName })\n    .then(result => result.state)\n    .catch(() => 'denied' as PermissionState);\n}\n\nexport function requestClipboardPermission(): Promise<boolean> {\n  return getClipboardPermission()\n    .then(state => state === 'granted')\n    .catch(() => false);\n}\n\nexport async function copyWithNotification(text: string, notificationText?: string): Promise<void> {\n  try {\n    await copyToClipboard(text);\n    \n    // Show notification if available\n    if (notificationText && 'Notification' in window) {\n      if (Notification.permission === 'granted') {\n        new Notification('HeadForge', {\n          body: notificationText,\n          icon: '/icons/icon-48.png'\n        });\n      } else if (Notification.permission !== 'denied') {\n        const permission = await Notification.requestPermission();\n        if (permission === 'granted') {\n          new Notification('HeadForge', {\n            body: notificationText,\n            icon: '/icons/icon-48.png'\n          });\n        }\n      }\n    }\n  } catch (error) {\n    console.error('Failed to copy with notification:', error);\n    throw error;\n  }\n}\n\nexport function createCopyButton(\n  text: string,\n  buttonText: string = 'Copy',\n  onSuccess?: () => void,\n  onError?: (error: Error) => void\n): HTMLButtonElement {\n  const button = document.createElement('button');\n  button.textContent = buttonText;\n  button.className = 'copy-button';\n  \n  button.addEventListener('click', async () => {\n    try {\n      await copyToClipboard(text);\n      button.textContent = 'Copied!';\n      button.classList.add('copied');\n      \n      if (onSuccess) {\n        onSuccess();\n      }\n      \n      // Reset button after 2 seconds\n      setTimeout(() => {\n        button.textContent = buttonText;\n        button.classList.remove('copied');\n      }, 2000);\n    } catch (error) {\n      button.textContent = 'Failed';\n      button.classList.add('error');\n      \n      if (onError) {\n        onError(error as Error);\n      }\n      \n      // Reset button after 2 seconds\n      setTimeout(() => {\n        button.textContent = buttonText;\n        button.classList.remove('error');\n      }, 2000);\n    }\n  });\n  \n  return button;\n}\n\nexport function createCopyableElement(\n  text: string,\n  elementType: keyof HTMLElementTagNameMap = 'div'\n): HTMLElement {\n  const element = document.createElement(elementType);\n  element.textContent = text;\n  element.className = 'copyable';\n  element.title = 'Click to copy';\n  \n  element.addEventListener('click', async () => {\n    try {\n      await copyToClipboard(text);\n      element.classList.add('copied');\n      \n      // Reset after 2 seconds\n      setTimeout(() => {\n        element.classList.remove('copied');\n      }, 2000);\n    } catch (error) {\n      element.classList.add('error');\n      \n      // Reset after 2 seconds\n      setTimeout(() => {\n        element.classList.remove('error');\n      }, 2000);\n    }\n  });\n  \n  return element;\n}\n\nexport function addCopyToClipboardListener(\n  element: HTMLElement,\n  getText: () => string,\n  onSuccess?: () => void,\n  onError?: (error: Error) => void\n): void {\n  element.addEventListener('click', async () => {\n    try {\n      const text = getText();\n      await copyToClipboard(text);\n      \n      if (onSuccess) {\n        onSuccess();\n      }\n    } catch (error) {\n      if (onError) {\n        onError(error as Error);\n      }\n    }\n  });\n}\n\nexport function getClipboardInfo(): {\n  supported: boolean;\n  readSupported: boolean;\n  writeSupported: boolean;\n  permission: PermissionState | 'unknown';\n} {\n  return {\n    supported: isClipboardSupported(),\n    readSupported: isClipboardReadSupported(),\n    writeSupported: isClipboardWriteSupported(),\n    permission: 'unknown' as PermissionState\n  };\n}\n\nexport async function getClipboardInfoAsync(): Promise<{\n  supported: boolean;\n  readSupported: boolean;\n  writeSupported: boolean;\n  permission: PermissionState;\n}> {\n  const permission = await getClipboardPermission();\n  \n  return {\n    supported: isClipboardSupported(),\n    readSupported: isClipboardReadSupported(),\n    writeSupported: isClipboardWriteSupported(),\n    permission\n  };\n}","export const FileUtils = {\r\n  saveFile,\r\n  saveFileAsBlob,\r\n  readFile,\r\n  getFileExtension,\r\n  isValidFileName,\r\n  sanitizeFileName,\r\n  createBlob,\r\n  downloadBlob,\r\n  getFileSize,\r\n  formatFileSize\r\n};\r\n\r\nexport function saveFile(content: string, filename: string): void {\r\n  try {\r\n    // Create a blob with the content\r\n    const blob = new Blob([content], { type: 'text/plain;charset=utf-8' });\r\n    \r\n    // Create a temporary URL for the blob\r\n    const url = URL.createObjectURL(blob);\r\n    \r\n    // Create a temporary anchor element\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n    \r\n    // Append to body, click, and remove\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    \r\n    // Clean up the URL\r\n    URL.revokeObjectURL(url);\r\n  } catch (error) {\r\n    console.error('Failed to save file:', error);\r\n    throw new Error('Failed to save file');\r\n  }\r\n}\r\n\r\nexport function saveFileAsBlob(blob: Blob, filename: string): void {\r\n  try {\r\n    // Create a temporary URL for the blob\r\n    const url = URL.createObjectURL(blob);\r\n    \r\n    // Create a temporary anchor element\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n    \r\n    // Append to body, click, and remove\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    \r\n    // Clean up the URL\r\n    URL.revokeObjectURL(url);\r\n  } catch (error) {\r\n    console.error('Failed to save file:', error);\r\n    throw new Error('Failed to save file');\r\n  }\r\n}\r\n\r\nexport function saveJsonFile(data: any, filename: string): void {\r\n  const jsonString = JSON.stringify(data, null, 2);\r\n  const blob = new Blob([jsonString], { type: 'application/json' });\r\n  saveFileAsBlob(blob, filename);\r\n}\r\n\r\nexport function saveCsvFile(data: any[], filename: string): void {\r\n  if (data.length === 0) {\r\n    throw new Error('No data to export');\r\n  }\r\n  \r\n  const headers = Object.keys(data[0]);\r\n  const csvContent = [\r\n    headers.join(','),\r\n    ...data.map(row => headers.map(header => `\"${row[header] || ''}\"`).join(','))\r\n  ].join('\\n');\r\n  \r\n  const blob = new Blob([csvContent], { type: 'text/csv' });\r\n  saveFileAsBlob(blob, filename);\r\n}\r\n\r\nexport function saveHtmlFile(html: string, filename: string): void {\r\n  const blob = new Blob([html], { type: 'text/html' });\r\n  saveFileAsBlob(blob, filename);\r\n}\r\n\r\nexport function saveMarkdownFile(markdown: string, filename: string): void {\r\n  const blob = new Blob([markdown], { type: 'text/markdown' });\r\n  saveFileAsBlob(blob, filename);\r\n}\r\n\r\nexport function saveXmlFile(xml: string, filename: string): void {\r\n  const blob = new Blob([xml], { type: 'application/xml' });\r\n  saveFileAsBlob(blob, filename);\r\n}\r\n\r\nexport function saveYamlFile(yaml: string, filename: string): void {\r\n  const blob = new Blob([yaml], { type: 'text/yaml' });\r\n  saveFileAsBlob(blob, filename);\r\n}\r\n\r\nexport function readFile(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    \r\n    reader.onload = (event) => {\r\n      const result = event.target?.result;\r\n      if (typeof result === 'string') {\r\n        resolve(result);\r\n      } else {\r\n        reject(new Error('Failed to read file as text'));\r\n      }\r\n    };\r\n    \r\n    reader.onerror = () => {\r\n      reject(new Error('Failed to read file'));\r\n    };\r\n    \r\n    reader.readAsText(file);\r\n  });\r\n}\r\n\r\nexport function readFileAsArrayBuffer(file: File): Promise<ArrayBuffer> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    \r\n    reader.onload = (event) => {\r\n      const result = event.target?.result;\r\n      if (result instanceof ArrayBuffer) {\r\n        resolve(result);\r\n      } else {\r\n        reject(new Error('Failed to read file as ArrayBuffer'));\r\n      }\r\n    };\r\n    \r\n    reader.onerror = () => {\r\n      reject(new Error('Failed to read file'));\r\n    };\r\n    \r\n    reader.readAsArrayBuffer(file);\r\n  });\r\n}\r\n\r\nexport function readFileAsDataURL(file: File): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    \r\n    reader.onload = (event) => {\r\n      const result = event.target?.result;\r\n      if (typeof result === 'string') {\r\n        resolve(result);\r\n      } else {\r\n        reject(new Error('Failed to read file as DataURL'));\r\n      }\r\n    };\r\n    \r\n    reader.onerror = () => {\r\n      reject(new Error('Failed to read file'));\r\n    };\r\n    \r\n    reader.readAsDataURL(file);\r\n  });\r\n}\r\n\r\nexport function createFileInput(\r\n  accept: string = '*/*',\r\n  multiple: boolean = false\r\n): HTMLInputElement {\r\n  const input = document.createElement('input');\r\n  input.type = 'file';\r\n  input.accept = accept;\r\n  input.multiple = multiple;\r\n  input.style.display = 'none';\r\n  \r\n  return input;\r\n}\r\n\r\nexport function selectFile(\r\n  accept: string = '*/*',\r\n  multiple: boolean = false\r\n): Promise<FileList | null> {\r\n  return new Promise((resolve) => {\r\n    const input = createFileInput(accept, multiple);\r\n    \r\n    input.addEventListener('change', () => {\r\n      resolve(input.files);\r\n    });\r\n    \r\n    input.addEventListener('cancel', () => {\r\n      resolve(null);\r\n    });\r\n    \r\n    document.body.appendChild(input);\r\n    input.click();\r\n    document.body.removeChild(input);\r\n  });\r\n}\r\n\r\nexport function selectTextFile(): Promise<File | null> {\r\n  return selectFile('text/*', false).then(files => files?.[0] || null);\r\n}\r\n\r\nexport function selectJsonFile(): Promise<File | null> {\r\n  return selectFile('application/json', false).then(files => files?.[0] || null);\r\n}\r\n\r\nexport function selectImageFile(): Promise<File | null> {\r\n  return selectFile('image/*', false).then(files => files?.[0] || null);\r\n}\r\n\r\nexport function getFileExtension(filename: string): string {\r\n  const lastDotIndex = filename.lastIndexOf('.');\r\n  return lastDotIndex !== -1 ? filename.substring(lastDotIndex + 1).toLowerCase() : '';\r\n}\r\n\r\nexport function getFileNameWithoutExtension(filename: string): string {\r\n  const lastDotIndex = filename.lastIndexOf('.');\r\n  return lastDotIndex !== -1 ? filename.substring(0, lastDotIndex) : filename;\r\n}\r\n\r\nexport function getFileSize(bytes: number): string {\r\n  const units = ['B', 'KB', 'MB', 'GB', 'TB'];\r\n  let size = bytes;\r\n  let unitIndex = 0;\r\n  \r\n  while (size >= 1024 && unitIndex < units.length - 1) {\r\n    size /= 1024;\r\n    unitIndex++;\r\n  }\r\n  \r\n  return `${size.toFixed(1)} ${units[unitIndex]}`;\r\n}\r\n\r\nexport function getFileType(filename: string): string {\r\n  const extension = getFileExtension(filename);\r\n  \r\n  const typeMap: Record<string, string> = {\r\n    // Text files\r\n    'txt': 'text/plain',\r\n    'md': 'text/markdown',\r\n    'html': 'text/html',\r\n    'css': 'text/css',\r\n    'js': 'text/javascript',\r\n    'ts': 'text/typescript',\r\n    'json': 'application/json',\r\n    'xml': 'application/xml',\r\n    'csv': 'text/csv',\r\n    'yaml': 'text/yaml',\r\n    'yml': 'text/yaml',\r\n    \r\n    // Code files\r\n    'py': 'text/x-python',\r\n    'java': 'text/x-java',\r\n    'cpp': 'text/x-c++',\r\n    'c': 'text/x-c',\r\n    'cs': 'text/x-csharp',\r\n    'php': 'text/x-php',\r\n    'rb': 'text/x-ruby',\r\n    'go': 'text/x-go',\r\n    'rs': 'text/x-rust',\r\n    'sql': 'text/x-sql',\r\n    \r\n    // Image files\r\n    'jpg': 'image/jpeg',\r\n    'jpeg': 'image/jpeg',\r\n    'png': 'image/png',\r\n    'gif': 'image/gif',\r\n    'svg': 'image/svg+xml',\r\n    'webp': 'image/webp',\r\n    \r\n    // Archive files\r\n    'zip': 'application/zip',\r\n    'rar': 'application/x-rar-compressed',\r\n    '7z': 'application/x-7z-compressed',\r\n    'tar': 'application/x-tar',\r\n    'gz': 'application/gzip'\r\n  };\r\n  \r\n  return typeMap[extension] || 'application/octet-stream';\r\n}\r\n\r\nexport function isValidFileName(filename: string): boolean {\r\n  // Check for invalid characters\r\n  const invalidChars = /[<>:\"/\\\\|?*]/;\r\n  if (invalidChars.test(filename)) {\r\n    return false;\r\n  }\r\n  \r\n  // Check for reserved names (Windows)\r\n  const reservedNames = [\r\n    'CON', 'PRN', 'AUX', 'NUL',\r\n    'COM1', 'COM2', 'COM3', 'COM4', 'COM5', 'COM6', 'COM7', 'COM8', 'COM9',\r\n    'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5', 'LPT6', 'LPT7', 'LPT8', 'LPT9'\r\n  ];\r\n  \r\n  const nameWithoutExt = getFileNameWithoutExtension(filename).toUpperCase();\r\n  if (reservedNames.includes(nameWithoutExt)) {\r\n    return false;\r\n  }\r\n  \r\n  // Check length\r\n  if (filename.length > 255) {\r\n    return false;\r\n  }\r\n  \r\n  return true;\r\n}\r\n\r\nexport function sanitizeFileName(filename: string): string {\r\n  // Remove invalid characters\r\n  let sanitized = filename.replace(/[<>:\"/\\\\|?*]/g, '');\r\n  \r\n  // Remove leading/trailing spaces and dots\r\n  sanitized = sanitized.replace(/^[\\s.]+|[\\s.]+$/g, '');\r\n  \r\n  // Replace multiple spaces with single space\r\n  sanitized = sanitized.replace(/\\s+/g, ' ');\r\n  \r\n  // Limit length\r\n  if (sanitized.length > 255) {\r\n    const extension = getFileExtension(filename);\r\n    const nameWithoutExt = getFileNameWithoutExtension(sanitized);\r\n    const maxNameLength = 255 - extension.length - 1; // -1 for the dot\r\n    sanitized = nameWithoutExt.substring(0, maxNameLength) + '.' + extension;\r\n  }\r\n  \r\n  return sanitized;\r\n}\r\n\r\nexport function generateUniqueFileName(filename: string): string {\r\n  const extension = getFileExtension(filename);\r\n  const nameWithoutExt = getFileNameWithoutExtension(filename);\r\n  \r\n  let counter = 1;\r\n  let newFilename = filename;\r\n  \r\n  while (counter < 1000) { // Prevent infinite loop\r\n    newFilename = `${nameWithoutExt}_${counter}.${extension}`;\r\n    counter++;\r\n    \r\n    // In a real application, you would check if the file exists\r\n    // For now, we'll just return the generated name\r\n    break;\r\n  }\r\n  \r\n  return newFilename;\r\n}\r\n\r\nexport function createBlob(content: string, type: string = 'text/plain'): Blob {\r\n  return new Blob([content], { type });\r\n}\r\n\r\nexport function downloadBlob(blob: Blob, filename: string): void {\r\n  const url = URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.download = filename;\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  URL.revokeObjectURL(url);\r\n}\r\n\r\nexport function formatFileSize(bytes: number): string {\r\n  if (bytes === 0) return '0 Bytes';\r\n  \r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  \r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n}","export interface UpdateInfo {\r\n  version: string;\r\n  releaseDate: string;\r\n  downloadUrl: string;\r\n  changelog: string;\r\n  isNewer: boolean;\r\n}\r\n\r\nexport interface UpdateCheckerConfig {\r\n  checkInterval: number; // in milliseconds\r\n  githubRepo: string;\r\n  currentVersion: string;\r\n}\r\n\r\nexport class UpdateChecker {\r\n  private config: UpdateCheckerConfig;\r\n  private lastCheck: number = 0;\r\n  private updateInfo: UpdateInfo | null = null;\r\n\r\n  constructor(config: UpdateCheckerConfig) {\r\n    this.config = config;\r\n  }\r\n\r\n  /**\r\n   * Check for updates from GitHub releases\r\n   */\r\n  async checkForUpdates(): Promise<UpdateInfo | null> {\r\n    try {\r\n      const response = await fetch(`https://api.github.com/repos/${this.config.githubRepo}/releases/latest`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`GitHub API error: ${response.status}`);\r\n      }\r\n\r\n      const release = await response.json();\r\n      const latestVersion = release.tag_name.replace('v', '');\r\n      const isNewer = this.isVersionNewer(latestVersion, this.config.currentVersion);\r\n\r\n      this.updateInfo = {\r\n        version: latestVersion,\r\n        releaseDate: release.published_at,\r\n        downloadUrl: release.html_url,\r\n        changelog: release.body || 'No changelog available',\r\n        isNewer\r\n      };\r\n\r\n      this.lastCheck = Date.now();\r\n      return this.updateInfo;\r\n    } catch (error) {\r\n      console.error('Failed to check for updates:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if we should perform an automatic update check\r\n   */\r\n  shouldCheckForUpdates(): boolean {\r\n    const now = Date.now();\r\n    return (now - this.lastCheck) > this.config.checkInterval;\r\n  }\r\n\r\n  /**\r\n   * Get cached update info\r\n   */\r\n  getUpdateInfo(): UpdateInfo | null {\r\n    return this.updateInfo;\r\n  }\r\n\r\n  /**\r\n   * Compare version strings (semantic versioning)\r\n   */\r\n  private isVersionNewer(version1: string, version2: string): boolean {\r\n    const v1Parts = version1.split('.').map(Number);\r\n    const v2Parts = version2.split('.').map(Number);\r\n\r\n    for (let i = 0; i < Math.max(v1Parts.length, v2Parts.length); i++) {\r\n      const v1Part = v1Parts[i] || 0;\r\n      const v2Part = v2Parts[i] || 0;\r\n\r\n      if (v1Part > v2Part) return true;\r\n      if (v1Part < v2Part) return false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get update status for display\r\n   */\r\n  getUpdateStatus(): {\r\n    hasUpdate: boolean;\r\n    currentVersion: string;\r\n    latestVersion: string | null;\r\n    lastCheck: Date | null;\r\n  } {\r\n    return {\r\n      hasUpdate: this.updateInfo?.isNewer || false,\r\n      currentVersion: this.config.currentVersion,\r\n      latestVersion: this.updateInfo?.version || null,\r\n      lastCheck: this.lastCheck ? new Date(this.lastCheck) : null\r\n    };\r\n  }\r\n}\r\n\r\n// Default configuration\r\nexport const DEFAULT_UPDATE_CONFIG: UpdateCheckerConfig = {\r\n  checkInterval: 24 * 60 * 60 * 1000, // 24 hours\r\n  githubRepo: 'satoshiba/headforge',\r\n  currentVersion: '1.0.0'\r\n};\r\n\r\n// Global update checker instance\r\nexport const updateChecker = new UpdateChecker(DEFAULT_UPDATE_CONFIG);\r\n","import { updateChecker, UpdateInfo } from '../../utils/update-checker';\r\n\r\nexport class UpdateCheckerUI {\r\n  private container: HTMLElement;\r\n  private updateButton: HTMLButtonElement | null = null;\r\n  private updateNotification: HTMLElement | null = null;\r\n\r\n  constructor(container: HTMLElement) {\r\n    this.container = container;\r\n    this.initialize();\r\n  }\r\n\r\n  private initialize(): void {\r\n    this.createUpdateButton();\r\n    this.bindEvents();\r\n    this.checkForUpdatesOnLoad();\r\n  }\r\n\r\n  private createUpdateButton(): void {\r\n    // Create a subtle update button in the bottom right\r\n    this.updateButton = document.createElement('button');\r\n    this.updateButton.className = 'update-checker-btn';\r\n    this.updateButton.innerHTML = `\r\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n        <path d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3 4-3 9-3 9 1.34 9 3z\"/>\r\n        <path d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\"/>\r\n        <path d=\"M12 1v6\"/>\r\n        <path d=\"M9 4l3-3 3 3\"/>\r\n      </svg>\r\n    `;\r\n    this.updateButton.title = 'Check for updates';\r\n    \r\n    // Position it in the bottom right corner\r\n    this.updateButton.style.cssText = `\r\n      position: fixed;\r\n      bottom: 8px;\r\n      right: 8px;\r\n      width: 24px;\r\n      height: 24px;\r\n      border: none;\r\n      background: rgba(0, 0, 0, 0.1);\r\n      border-radius: 50%;\r\n      cursor: pointer;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      transition: all 0.2s ease;\r\n      z-index: 1000;\r\n      opacity: 0.6;\r\n    `;\r\n\r\n    // Add hover effects\r\n    this.updateButton.addEventListener('mouseenter', () => {\r\n      if (this.updateButton) {\r\n        this.updateButton.style.opacity = '1';\r\n        this.updateButton.style.background = 'rgba(0, 0, 0, 0.2)';\r\n        this.updateButton.style.transform = 'scale(1.1)';\r\n      }\r\n    });\r\n\r\n    this.updateButton.addEventListener('mouseleave', () => {\r\n      if (this.updateButton) {\r\n        this.updateButton.style.opacity = '0.6';\r\n        this.updateButton.style.background = 'rgba(0, 0, 0, 0.1)';\r\n        this.updateButton.style.transform = 'scale(1)';\r\n      }\r\n    });\r\n\r\n    this.container.appendChild(this.updateButton);\r\n  }\r\n\r\n  private bindEvents(): void {\r\n    if (this.updateButton) {\r\n      this.updateButton.addEventListener('click', () => {\r\n        this.checkForUpdates();\r\n      });\r\n    }\r\n  }\r\n\r\n  private async checkForUpdatesOnLoad(): Promise<void> {\r\n    // Check for updates on load if enough time has passed\r\n    if (updateChecker.shouldCheckForUpdates()) {\r\n      await this.checkForUpdates(true);\r\n    } else {\r\n      // Show cached update info if available\r\n      const updateInfo = updateChecker.getUpdateInfo();\r\n      if (updateInfo?.isNewer) {\r\n        this.showUpdateAvailable(updateInfo);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async checkForUpdates(silent: boolean = false): Promise<void> {\r\n    if (!this.updateButton) return;\r\n\r\n    // Show loading state\r\n    this.updateButton.innerHTML = `\r\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n        <path d=\"M21 12a9 9 0 11-6.219-8.56\"/>\r\n      </svg>\r\n    `;\r\n    this.updateButton.style.animation = 'spin 1s linear infinite';\r\n\r\n    try {\r\n      const updateInfo = await updateChecker.checkForUpdates();\r\n      \r\n      if (updateInfo?.isNewer) {\r\n        this.showUpdateAvailable(updateInfo);\r\n        if (!silent) {\r\n          this.showNotification('Update available!', 'success');\r\n        }\r\n      } else if (!silent) {\r\n        this.showNotification('You are up to date!', 'info');\r\n      }\r\n    } catch (error) {\r\n      console.error('Update check failed:', error);\r\n      if (!silent) {\r\n        this.showNotification('Failed to check for updates', 'error');\r\n      }\r\n    } finally {\r\n      // Reset button state\r\n      if (this.updateButton) {\r\n        this.updateButton.innerHTML = `\r\n          <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n            <path d=\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3 4-3 9-3 9 1.34 9 3z\"/>\r\n            <path d=\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\"/>\r\n            <path d=\"M12 1v6\"/>\r\n            <path d=\"M9 4l3-3 3 3\"/>\r\n          </svg>\r\n        `;\r\n        this.updateButton.style.animation = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  private showUpdateAvailable(updateInfo: UpdateInfo): void {\r\n    if (!this.updateButton) return;\r\n\r\n    // Change button appearance to indicate update available\r\n    this.updateButton.innerHTML = `\r\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"10\"/>\r\n        <path d=\"M12 6v6l4 2\"/>\r\n        <path d=\"M16 4l4 4-4 4\"/>\r\n      </svg>\r\n    `;\r\n    this.updateButton.style.background = 'rgba(34, 197, 94, 0.2)';\r\n    this.updateButton.style.color = '#22c55e';\r\n    this.updateButton.title = `Update available: v${updateInfo.version}`;\r\n\r\n    // Add click handler to open update page\r\n    this.updateButton.onclick = () => {\r\n      chrome.tabs.create({ url: updateInfo.downloadUrl });\r\n    };\r\n  }\r\n\r\n  private showNotification(message: string, type: 'success' | 'error' | 'info'): void {\r\n    // Remove existing notification\r\n    if (this.updateNotification) {\r\n      this.updateNotification.remove();\r\n    }\r\n\r\n    // Create notification\r\n    this.updateNotification = document.createElement('div');\r\n    this.updateNotification.className = `update-notification update-notification-${type}`;\r\n    this.updateNotification.textContent = message;\r\n    \r\n    this.updateNotification.style.cssText = `\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      padding: 12px 16px;\r\n      border-radius: 8px;\r\n      color: white;\r\n      font-size: 14px;\r\n      font-weight: 500;\r\n      z-index: 1001;\r\n      opacity: 0;\r\n      transform: translateX(100%);\r\n      transition: all 0.3s ease;\r\n      max-width: 300px;\r\n      word-wrap: break-word;\r\n    `;\r\n\r\n    // Set background color based on type\r\n    switch (type) {\r\n      case 'success':\r\n        this.updateNotification.style.background = '#22c55e';\r\n        break;\r\n      case 'error':\r\n        this.updateNotification.style.background = '#ef4444';\r\n        break;\r\n      case 'info':\r\n        this.updateNotification.style.background = '#3b82f6';\r\n        break;\r\n    }\r\n\r\n    document.body.appendChild(this.updateNotification);\r\n\r\n    // Animate in\r\n    setTimeout(() => {\r\n      if (this.updateNotification) {\r\n        this.updateNotification.style.opacity = '1';\r\n        this.updateNotification.style.transform = 'translateX(0)';\r\n      }\r\n    }, 100);\r\n\r\n    // Auto remove after 3 seconds\r\n    setTimeout(() => {\r\n      if (this.updateNotification) {\r\n        this.updateNotification.style.opacity = '0';\r\n        this.updateNotification.style.transform = 'translateX(100%)';\r\n        setTimeout(() => {\r\n          if (this.updateNotification) {\r\n            this.updateNotification.remove();\r\n            this.updateNotification = null;\r\n          }\r\n        }, 300);\r\n      }\r\n    }, 3000);\r\n  }\r\n\r\n  public destroy(): void {\r\n    if (this.updateButton) {\r\n      this.updateButton.remove();\r\n      this.updateButton = null;\r\n    }\r\n    if (this.updateNotification) {\r\n      this.updateNotification.remove();\r\n      this.updateNotification = null;\r\n    }\r\n  }\r\n}\r\n\r\n// Add CSS animations\r\nconst style = document.createElement('style');\r\nstyle.textContent = `\r\n  @keyframes spin {\r\n    from { transform: rotate(0deg); }\r\n    to { transform: rotate(360deg); }\r\n  }\r\n  \r\n  .update-checker-btn:hover {\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n  }\r\n`;\r\ndocument.head.appendChild(style);\r\n","import { HeaderData, LanguageConfig, UserPreferences, ExportOptions, Theme } from '@/types';\nimport { languageConfigs, getLanguageById } from '@/utils/language-configs';\nimport { templateEngine } from '@/utils/template-engine';\nimport { DateUtils } from '@/utils/date-utils';\nimport { ValidationUtils } from '@/utils/validation';\nimport { ClipboardUtils } from '@/utils/clipboard';\nimport { FileUtils } from '@/utils/file-utils';\nimport { UpdateCheckerUI } from './components/update-checker';\nimport { \n  DEFAULT_VALUES, \n  STORAGE_KEYS, \n  SUCCESS_MESSAGES, \n  ERROR_MESSAGES \n} from '@/utils/constants';\n\nexport class HeadForgePopup {\n  private form!: HTMLFormElement;\n  // Preview elements removed\n  private themeToggle!: HTMLElement;\n  private headerBanner!: HTMLImageElement;\n  private settingsBtn!: HTMLElement;\n  private generateBtn!: HTMLElement;\n  private clearBtn!: HTMLElement;\n  private copyBtn!: HTMLElement;\n  private downloadBtn!: HTMLElement;\n  // Insert button removed\n  private loadingOverlay!: HTMLElement;\n  private toastContainer!: HTMLElement;\n  \n  private currentLanguage: LanguageConfig | null = null;\n  private userPreferences: UserPreferences = this.getDefaultPreferences();\n  private isCopying: boolean = false;\n  private isDownloading: boolean = false;\n  private updateChecker: UpdateCheckerUI | null = null;\n  private devModeClicks: number = 0;\n  private isDevMode: boolean = false;\n  private randomButton!: HTMLElement;\n  private headerContainer!: HTMLElement;\n  private autoDeactivateTimer: NodeJS.Timeout | null = null;\n  private autoDeactivateDuration: number = 3 * 60 * 1000; // Default 3 minutes in milliseconds\n  private isAutoDeactivateActive: boolean = false;\n  private timerDisplay!: HTMLElement;\n  private timerText!: HTMLElement;\n  private countdownInterval: NodeJS.Timeout | null = null;\n  private timerCloseBtn!: HTMLElement;\n  \n  // Options modal elements\n  private optionsModal!: HTMLElement;\n  private optionsModalOverlay!: HTMLElement;\n  private closeOptionsModalBtn!: HTMLElement;\n  private cancelOptionsBtn!: HTMLElement;\n  private saveOptionsBtn!: HTMLElement;\n  private optionsNavBtns!: NodeListOf<HTMLElement>;\n  private optionsTabs!: NodeListOf<HTMLElement>;\n  private importFileInput!: HTMLInputElement;\n\n  constructor() {\n    this.initializeElements();\n    this.setupEventListeners();\n    this.loadUserPreferences();\n    this.populateLanguageOptions();\n    this.setupTheme();\n    this.loadLastFormData();\n    this.initializeUpdateChecker();\n    this.updatePreview();\n  }\n\n  private initializeElements(): void {\n    this.form = document.getElementById('header-form') as HTMLFormElement;\n    // Preview elements removed - no longer needed\n    this.themeToggle = document.getElementById('theme-toggle') as HTMLElement;\n    this.settingsBtn = document.getElementById('settings-btn') as HTMLElement;\n    this.randomButton = document.getElementById('random-data') as HTMLElement;\n    this.headerContainer = document.getElementById('header-container') as HTMLElement;\n    this.generateBtn = document.getElementById('generate-header') as HTMLElement;\n    this.clearBtn = document.getElementById('clear-form') as HTMLElement;\n    this.copyBtn = document.getElementById('copy-clipboard') as HTMLElement;\n    this.downloadBtn = document.getElementById('download-file') as HTMLElement;\n    this.loadingOverlay = document.getElementById('loading-overlay') as HTMLElement;\n    this.toastContainer = document.getElementById('toast-container') as HTMLElement;\n    this.headerBanner = document.getElementById('header-banner') as HTMLImageElement;\n    this.timerDisplay = document.getElementById('auto-deactivate-timer') as HTMLElement;\n    this.timerText = this.timerDisplay?.querySelector('.timer-text') as HTMLElement;\n    this.timerCloseBtn = document.getElementById('close-dev-mode') as HTMLElement;\n    \n    // Initialize options modal elements\n    this.optionsModal = document.getElementById('options-modal') as HTMLElement;\n    this.optionsModalOverlay = this.optionsModal?.querySelector('.options-modal-overlay') as HTMLElement;\n    this.closeOptionsModalBtn = document.getElementById('close-options-modal') as HTMLElement;\n    this.cancelOptionsBtn = document.getElementById('cancel-options') as HTMLElement;\n    this.saveOptionsBtn = document.getElementById('save-options') as HTMLElement;\n    this.optionsNavBtns = document.querySelectorAll('.options-modal-nav-btn') as NodeListOf<HTMLElement>;\n    this.optionsTabs = document.querySelectorAll('.options-modal-tab') as NodeListOf<HTMLElement>;\n    this.importFileInput = document.getElementById('import-file') as HTMLInputElement;\n  }\n\n  private setupEventListeners(): void {\n    // Form input events\n    this.form.addEventListener('input', this.debounce(() => {\n      this.updatePreview();\n      this.saveFormData();\n      this.resetAutoDeactivateTimer();\n    }, 300));\n\n    this.form.addEventListener('change', () => {\n      this.updatePreview();\n      this.saveFormData();\n      this.resetAutoDeactivateTimer();\n    });\n\n    // Language selection\n    const languageSelect = document.getElementById('language') as HTMLSelectElement;\n    if (languageSelect) {\n      languageSelect.addEventListener('change', (e) => {\n        const target = e.target as HTMLSelectElement;\n        this.currentLanguage = getLanguageById(target.value) ?? null;\n        this.updatePreview();\n        this.resetAutoDeactivateTimer();\n      });\n    }\n\n    // Auto-fill dates\n    const creationDateInput = document.getElementById('creationDate') as HTMLInputElement;\n    const lastUpdatedInput = document.getElementById('lastUpdated') as HTMLInputElement;\n    \n    if (creationDateInput && !creationDateInput.value) {\n      creationDateInput.value = DateUtils.getCurrentDate();\n    }\n    if (lastUpdatedInput && !lastUpdatedInput.value) {\n      lastUpdatedInput.value = DateUtils.getCurrentDate();\n    }\n\n    // Button events\n    if (this.generateBtn) this.generateBtn.addEventListener('click', () => {\n      this.generateHeader();\n      this.resetAutoDeactivateTimer();\n    });\n    if (this.clearBtn) this.clearBtn.addEventListener('click', () => {\n      this.clearForm();\n      this.resetAutoDeactivateTimer();\n    });\n    if (this.copyBtn) this.copyBtn.addEventListener('click', () => {\n      this.copyToClipboard();\n      this.resetAutoDeactivateTimer();\n    });\n    if (this.downloadBtn) this.downloadBtn.addEventListener('click', () => {\n      this.downloadFile();\n      this.resetAutoDeactivateTimer();\n    });\n    // Insert button removed\n    \n    // Theme toggle\n    if (this.themeToggle) this.themeToggle.addEventListener('click', () => {\n      this.toggleTheme();\n      this.resetAutoDeactivateTimer();\n    });\n    \n    // Settings button\n    if (this.settingsBtn) this.settingsBtn.addEventListener('click', () => {\n      this.openSettings();\n      this.resetAutoDeactivateTimer();\n    });\n\n    // Dev mode activation (click 10 times on \"Ready to generate\" text)\n    const statusText = document.getElementById('status-text');\n    if (statusText) {\n      statusText.addEventListener('click', () => {\n        this.handleDevModeClick();\n      });\n    }\n\n    // Random data button\n    if (this.randomButton) {\n      this.randomButton.addEventListener('click', () => this.generateRandomData());\n    }\n\n    // Preview toggle functionality removed - no longer needed\n\n    // Timer close button\n    if (this.timerCloseBtn) {\n      this.timerCloseBtn.addEventListener('click', () => {\n        this.deactivateDevMode();\n      });\n    }\n\n    // Options modal events\n    if (this.closeOptionsModalBtn) {\n      this.closeOptionsModalBtn.addEventListener('click', () => this.closeOptionsModal());\n    }\n    if (this.optionsModalOverlay) {\n      this.optionsModalOverlay.addEventListener('click', () => this.closeOptionsModal());\n    }\n    if (this.cancelOptionsBtn) {\n      this.cancelOptionsBtn.addEventListener('click', () => this.closeOptionsModal());\n    }\n    if (this.saveOptionsBtn) {\n      this.saveOptionsBtn.addEventListener('click', () => this.saveOptions());\n    }\n    \n    // Options modal navigation\n    this.optionsNavBtns.forEach(btn => {\n      btn.addEventListener('click', () => {\n        const tabName = btn.dataset.tab;\n        if (tabName) {\n          this.switchOptionsTab(tabName);\n        }\n      });\n    });\n    \n    // Options modal advanced actions\n    const exportBtn = document.getElementById('export-settings');\n    const importBtn = document.getElementById('import-settings');\n    const resetBtn = document.getElementById('reset-settings');\n    \n    if (exportBtn) exportBtn.addEventListener('click', () => this.exportSettings());\n    if (importBtn) importBtn.addEventListener('click', () => this.importSettings());\n    if (resetBtn) resetBtn.addEventListener('click', () => this.resetSettings());\n    if (this.importFileInput) {\n      this.importFileInput.addEventListener('change', (e) => this.handleImportFile(e));\n    }\n\n    // Keyboard shortcuts\n    document.addEventListener('keydown', (e) => this.handleKeyboardShortcuts(e));\n  }\n\n  private populateLanguageOptions(): void {\n    const languageSelect = document.getElementById('language') as HTMLSelectElement;\n    \n    // Group languages by category\n    const languageArray = Object.values(languageConfigs);\n    const categories = [...new Set(languageArray.map(lang => lang.category))];\n    \n    categories.forEach(category => {\n      const optgroup = document.createElement('optgroup');\n      optgroup.label = this.capitalizeFirst(category);\n      \n      const categoryLanguages = languageArray.filter(lang => lang.category === category);\n      categoryLanguages.forEach(language => {\n        const option = document.createElement('option');\n        option.value = language.id;\n        option.textContent = language.name;\n        optgroup.appendChild(option);\n      });\n      \n      languageSelect.appendChild(optgroup);\n    });\n\n    // Set default language\n    if (this.userPreferences.defaultLanguage) {\n      languageSelect.value = this.userPreferences.defaultLanguage;\n      this.currentLanguage = getLanguageById(this.userPreferences.defaultLanguage) ?? null;\n    } else {\n      languageSelect.value = DEFAULT_VALUES.LANGUAGE;\n      this.currentLanguage = getLanguageById(DEFAULT_VALUES.LANGUAGE) ?? null;\n    }\n  }\n\n  private setupTheme(): void {\n    const body = document.body;\n    \n    // Remove existing theme classes\n    body.classList.remove('dark-mode');\n    \n    // Apply new theme class\n    if (this.userPreferences.theme === 'dark') {\n      body.classList.add('dark-mode');\n    }\n    // For 'light' theme, we don't add any class (uses default CSS)\n    \n    // Update banner based on theme\n    this.updateBanner();\n    \n    // Update theme toggle icon\n    this.updateThemeIcon();\n  }\n\n  private updateBanner(): void {\n    if (!this.headerBanner) return;\n    \n    // Use the same banner for all themes since it's transparent\n    this.headerBanner.src = '../assets/images/banner_final.png';\n  }\n\n  private toggleTheme(): void {\n    // Add transition animation class\n    this.themeToggle.classList.add('theme-transitioning');\n    \n    // Toggle between light and dark themes only\n    this.userPreferences.theme = this.userPreferences.theme === 'light' ? 'dark' : 'light';\n    \n    // Update theme icon with animation\n    this.updateThemeIcon();\n    \n    // Apply theme with smooth transition\n    setTimeout(() => {\n      this.setupTheme();\n      this.saveUserPreferences();\n      \n      // Remove transition class after animation completes\n      setTimeout(() => {\n        this.themeToggle.classList.remove('theme-transitioning');\n      }, 300);\n    }, 50);\n  }\n\n  private updateThemeIcon(): void {\n    const themeIcon = this.themeToggle.querySelector('.theme-icon') as HTMLElement;\n    if (!themeIcon) return;\n\n    // Add subtle icon transition animation\n    themeIcon.style.transform = 'scale(0.9) rotate(90deg)';\n    themeIcon.style.opacity = '0.6';\n    \n    setTimeout(() => {\n      // Update icon based on theme - only light and dark\n      if (this.userPreferences.theme === 'light') {\n        themeIcon.innerHTML = `\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"/>\n          </svg>\n        `;\n      } else {\n        themeIcon.innerHTML = `\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <circle cx=\"12\" cy=\"12\" r=\"5\"/>\n            <path d=\"M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42\"/>\n          </svg>\n        `;\n      }\n      \n      // Restore icon appearance\n      themeIcon.style.transform = 'scale(1) rotate(0deg)';\n      themeIcon.style.opacity = '1';\n    }, 150);\n  }\n\n  private updatePreview(): void {\n    // Preview functionality removed - no longer needed\n    // This method is kept for compatibility but does nothing\n  }\n\n  private initializeUpdateChecker(): void {\n    try {\n      this.updateChecker = new UpdateCheckerUI(document.body);\n    } catch (error) {\n      console.warn('Failed to initialize update checker:', error);\n    }\n  }\n\n  private getFormData(): HeaderData {\n    const formData = new FormData(this.form);\n\n    return {\n      fileName: formData.get('fileName') as string || '',\n      project: formData.get('project') as string || '',\n      author: formData.get('author') as string || '',\n      creationDate: formData.get('creationDate') as string || '',\n      lastUpdated: formData.get('lastUpdated') as string || '',\n      version: formData.get('version') as string || '',\n      description: formData.get('description') as string || '',\n      dependencies: '', // Not implemented in UI yet\n      license: formData.get('license') as string || '',\n      status: formData.get('status') as string || '',\n      language: formData.get('language') as string || '',\n      usage: formData.get('usage') as string || '',\n      notes: formData.get('notes') as string || '',\n      todo: formData.get('todo') as string || '',\n      headerType: (formData.get('headerType') as 'simple' | 'complete') || 'simple'\n    };\n  }\n\n  private async generateHeader(): Promise<void> {\n    if (!this.currentLanguage) {\n      this.showToast('Please select a programming language', 'error');\n      return;\n    }\n\n    try {\n      this.showLoading(true);\n      \n      const formData = this.getFormData();\n      const validation = ValidationUtils.validateHeaderData(formData);\n      \n      if (!validation.isValid) {\n        this.showValidationErrors(validation.errors);\n        return;\n      }\n\n      const headerContent = templateEngine.generateHeader(formData, this.currentLanguage!);\n      \n      // Preview functionality removed\n      \n      // Enable copy and download buttons\n      if (this.copyBtn) {\n        this.copyBtn.removeAttribute('disabled');\n        this.copyBtn.classList.remove('disabled');\n      }\n      if (this.downloadBtn) {\n        this.downloadBtn.removeAttribute('disabled');\n        this.downloadBtn.classList.remove('disabled');\n      }\n      \n      // Auto-copy to clipboard\n      await this.copyToClipboard();\n      \n    } catch (error) {\n      this.showToast(ERROR_MESSAGES.GENERIC_ERROR, 'error');\n      console.error('Error generating header:', error);\n    } finally {\n      this.showLoading(false);\n    }\n  }\n\n  private async copyToClipboard(): Promise<void> {\n    if (!this.currentLanguage) {\n      this.showToast('Please select a programming language', 'error');\n      return;\n    }\n\n    // Prevent multiple simultaneous calls\n    if (this.isCopying) {\n      console.log('Copy already in progress, skipping...');\n      return;\n    }\n    this.isCopying = true;\n\n    try {\n      const formData = this.getFormData();\n      const headerContent = templateEngine.generateHeader(formData, this.currentLanguage!);\n      \n      // Debug: Log the content being copied\n      console.log('Copying to clipboard:', {\n        content: headerContent,\n        length: headerContent.length,\n        language: this.currentLanguage.name,\n        isExtension: typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.id\n      });\n      \n      if (!headerContent || headerContent.trim().length === 0) {\n        throw new Error('Generated header content is empty');\n      }\n      \n      console.log('Attempting to copy to clipboard...');\n      await ClipboardUtils.copyToClipboard(headerContent);\n      console.log('Successfully copied to clipboard!');\n      this.showToast(`Header copied to clipboard (${headerContent.length} characters)`, 'success');\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : String(error);\n      console.error('Error copying to clipboard:', {\n        error: errorMessage,\n        stack: error instanceof Error ? error.stack : undefined,\n        clipboardSupported: !!navigator.clipboard,\n        isSecureContext: window.isSecureContext,\n        isExtension: typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.id\n      });\n      this.showToast(`Failed to copy to clipboard: ${errorMessage}`, 'error');\n    } finally {\n      this.isCopying = false;\n    }\n  }\n\n  private downloadFile(): void {\n    if (!this.currentLanguage) {\n      this.showToast('Please select a programming language', 'error');\n      return;\n    }\n\n    // Prevent multiple simultaneous calls\n    if (this.isDownloading) {\n      return;\n    }\n    this.isDownloading = true;\n\n    try {\n      const formData = this.getFormData();\n      const headerContent = templateEngine.generateHeader(formData, this.currentLanguage!);\n      \n      // Ensure filename has proper extension\n      let filename = formData.fileName || 'header';\n      if (!filename.includes('.')) {\n        filename = `${filename}${this.currentLanguage.extension}`;\n      }\n      \n      FileUtils.saveFile(headerContent, filename);\n      this.showToast(`File \"${filename}\" downloaded successfully`, 'success');\n    } catch (error) {\n      this.showToast('Failed to download file', 'error');\n      console.error('Error downloading file:', error);\n    } finally {\n      this.isDownloading = false;\n    }\n  }\n\n  // insertIntoEditor function removed - no longer needed\n\n  private clearForm(): void {\n    this.showCustomConfirm(\n      'Are you sure you want to clear all form data?',\n      () => {\n        this.form.reset();\n        \n        // Reset dates to current date\n        const creationDateInput = document.getElementById('creationDate') as HTMLInputElement;\n        const lastUpdatedInput = document.getElementById('lastUpdated') as HTMLInputElement;\n        creationDateInput.value = DateUtils.getCurrentDate();\n        lastUpdatedInput.value = DateUtils.getCurrentDate();\n        \n        // Reset language to default\n        const languageSelect = document.getElementById('language') as HTMLSelectElement;\n        languageSelect.value = this.userPreferences.defaultLanguage || DEFAULT_VALUES.LANGUAGE;\n        this.currentLanguage = getLanguageById(languageSelect.value) ?? null;\n        \n        // Disable copy and download buttons\n        if (this.copyBtn) {\n          this.copyBtn.setAttribute('disabled', 'disabled');\n          this.copyBtn.classList.add('disabled');\n        }\n        if (this.downloadBtn) {\n          this.downloadBtn.setAttribute('disabled', 'disabled');\n          this.downloadBtn.classList.add('disabled');\n        }\n        \n        this.updatePreview();\n        this.saveFormData();\n        this.showToast('Form cleared successfully', 'success');\n      }\n    );\n  }\n\n  // togglePreview function removed - no longer needed\n\n  private openSettings(): void {\n    this.showOptionsModal();\n  }\n\n  private handleKeyboardShortcuts(e: KeyboardEvent): void {\n    if (e.ctrlKey || e.metaKey) {\n      switch (e.key) {\n        case 'Enter':\n          e.preventDefault();\n          this.generateHeader();\n          break;\n        case 'c':\n          if (e.shiftKey) {\n            e.preventDefault();\n            this.copyToClipboard();\n          }\n          break;\n        case 's':\n          e.preventDefault();\n          this.downloadFile();\n          break;\n        case 'n':\n          e.preventDefault();\n          this.clearForm();\n          break;\n      }\n    }\n  }\n\n  private showValidationErrors(errors: string[]): void {\n    // Clear previous errors\n    document.querySelectorAll('.form-error').forEach(error => {\n      error.classList.remove('show');\n    });\n\n    // Show only the first error to avoid multiple toasts\n    if (errors.length > 0 && errors[0]) {\n      this.showToast(errors[0], 'error');\n    }\n  }\n\n  private showLoading(show: boolean): void {\n    this.loadingOverlay.classList.toggle('hidden', !show);\n  }\n\n  private showToast(message: string, type: 'success' | 'error' | 'warning' | 'info' = 'info'): void {\n    // Clear any existing toasts with the same message to prevent duplicates\n    this.clearDuplicateToasts(message);\n\n    const toast = document.createElement('div');\n    toast.className = `toast ${type}`;\n    \n    const icon = this.getToastIcon(type);\n    toast.innerHTML = `\n      <svg class=\"toast-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n        ${icon}\n      </svg>\n      <div class=\"toast-content\">\n        <p class=\"toast-message\">${message}</p>\n      </div>\n      <button class=\"toast-close\" onclick=\"this.parentElement.remove()\">\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\n          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\n        </svg>\n      </button>\n    `;\n    \n    this.toastContainer.appendChild(toast);\n    \n    // Auto-remove after 5 seconds\n    setTimeout(() => {\n      if (toast.parentElement) {\n        toast.remove();\n      }\n    }, 5000);\n  }\n\n  private clearDuplicateToasts(message: string): void {\n    const existingToasts = this.toastContainer.querySelectorAll('.toast');\n    existingToasts.forEach(toast => {\n      const messageElement = toast.querySelector('.toast-message');\n      if (messageElement && messageElement.textContent === message) {\n        toast.remove();\n      }\n    });\n  }\n\n  private showCustomConfirm(message: string, onConfirm: () => void): void {\n    const modal = document.getElementById('custom-confirm-modal');\n    const messageElement = document.querySelector('.custom-confirm-message');\n    const cancelBtn = document.getElementById('confirm-cancel');\n    const okBtn = document.getElementById('confirm-ok');\n\n    if (!modal || !messageElement || !cancelBtn || !okBtn) return;\n\n    // Set the message\n    messageElement.textContent = message;\n\n    // Show the modal\n    modal.style.display = 'flex';\n\n    // Handle cancel button\n    const handleCancel = () => {\n      modal.style.display = 'none';\n      cancelBtn.removeEventListener('click', handleCancel);\n      okBtn.removeEventListener('click', handleOk);\n    };\n\n    // Handle confirm button\n    const handleOk = () => {\n      modal.style.display = 'none';\n      onConfirm();\n      cancelBtn.removeEventListener('click', handleCancel);\n      okBtn.removeEventListener('click', handleOk);\n    };\n\n    // Add event listeners\n    cancelBtn.addEventListener('click', handleCancel);\n    okBtn.addEventListener('click', handleOk);\n\n    // Handle escape key\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        handleCancel();\n        document.removeEventListener('keydown', handleEscape);\n      }\n    };\n    document.addEventListener('keydown', handleEscape);\n\n    // Handle overlay click\n    const overlay = modal.querySelector('.custom-confirm-overlay');\n    if (overlay) {\n      const handleOverlayClick = () => {\n        handleCancel();\n        overlay.removeEventListener('click', handleOverlayClick);\n      };\n      overlay.addEventListener('click', handleOverlayClick);\n    }\n  }\n\n  private getToastIcon(type: string): string {\n    const icons = {\n      success: '<path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"/><polyline points=\"22,4 12,14.01 9,11.01\"/>',\n      error: '<circle cx=\"12\" cy=\"12\" r=\"10\"/><line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"/><line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"/>',\n      warning: '<path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"/><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"/><line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"/>',\n      info: '<circle cx=\"12\" cy=\"12\" r=\"10\"/><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"/><line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"/>'\n    };\n    return icons[type as keyof typeof icons] || icons.info;\n  }\n\n  private async loadUserPreferences(): Promise<void> {\n    try {\n      if (typeof chrome !== 'undefined' && chrome.storage && chrome.storage.sync) {\n        const result = await chrome.storage.sync.get(STORAGE_KEYS.USER_PREFERENCES);\n        if (result[STORAGE_KEYS.USER_PREFERENCES]) {\n          this.userPreferences = { ...this.userPreferences, ...result[STORAGE_KEYS.USER_PREFERENCES] };\n        }\n        \n        // Load auto-deactivate duration from settings\n        const settings = await chrome.storage.sync.get(['extensionSettings']);\n        if (settings.extensionSettings?.autoDeactivateDuration) {\n          this.autoDeactivateDuration = settings.extensionSettings.autoDeactivateDuration;\n        }\n      }\n    } catch (error) {\n      console.error('Error loading user preferences:', error);\n    }\n  }\n\n  private async saveUserPreferences(): Promise<void> {\n    try {\n      if (typeof chrome !== 'undefined' && chrome.storage && chrome.storage.sync) {\n        await chrome.storage.sync.set({\n          [STORAGE_KEYS.USER_PREFERENCES]: this.userPreferences\n        });\n      }\n    } catch (error) {\n      console.error('Error saving user preferences:', error);\n    }\n  }\n\n  private async loadLastFormData(): Promise<void> {\n    if (!this.userPreferences.rememberLastValues) return;\n\n    try {\n      if (typeof chrome !== 'undefined' && chrome.storage && chrome.storage.local) {\n        const result = await chrome.storage.local.get(STORAGE_KEYS.LAST_HEADER_DATA);\n        if (result[STORAGE_KEYS.LAST_HEADER_DATA]) {\n          const data = result[STORAGE_KEYS.LAST_HEADER_DATA];\n          this.populateForm(data);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading last form data:', error);\n    }\n  }\n\n  private async saveFormData(): Promise<void> {\n    if (!this.userPreferences.rememberLastValues) return;\n\n    try {\n      if (typeof chrome !== 'undefined' && chrome.storage && chrome.storage.local) {\n        const formData = this.getFormData();\n        await chrome.storage.local.set({\n          [STORAGE_KEYS.LAST_HEADER_DATA]: formData\n        });\n      }\n    } catch (error) {\n      console.error('Error saving form data:', error);\n    }\n  }\n\n  private populateForm(data: HeaderData): void {\n    // Populate form fields with saved data\n    Object.entries(data).forEach(([key, value]) => {\n      const element = document.getElementById(key) as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n      if (element && value) {\n        element.value = value as string;\n      }\n    });\n\n    // Update current language\n    if (data.language) {\n      this.currentLanguage = getLanguageById(data.language) ?? null;\n    }\n  }\n\n  private getDefaultPreferences(): UserPreferences {\n    // Detect system theme preference\n    const systemTheme = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    \n    return {\n      theme: systemTheme,\n      defaultLanguage: DEFAULT_VALUES.LANGUAGE,\n      defaultAuthor: DEFAULT_VALUES.AUTHOR,\n      defaultProject: DEFAULT_VALUES.PROJECT,\n      defaultLicense: DEFAULT_VALUES.LICENSE,\n      autoFillDates: true,\n      rememberLastValues: true,\n      exportFormat: DEFAULT_VALUES.EXPORT_FORMAT,\n      showPreview: true,\n      headerType: 'simple'\n    };\n  }\n\n  private capitalizeFirst(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private debounce<T extends (...args: any[]) => any>(func: T, wait: number): T {\n    let timeout: NodeJS.Timeout;\n    return ((...args: any[]) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func.apply(this, args), wait);\n    }) as T;\n  }\n\n  // Dev Mode Methods\n  private handleDevModeClick(): void {\n    this.devModeClicks++;\n    \n    if (this.devModeClicks >= 10) {\n      if (this.isDevMode) {\n        this.deactivateDevMode();\n      } else {\n        this.activateDevMode();\n      }\n      this.devModeClicks = 0;\n    } else if (this.devModeClicks === 1) {\n      // Reset counter after 3 seconds if not enough clicks\n      setTimeout(() => {\n        this.devModeClicks = 0;\n      }, 3000);\n    }\n  }\n\n  private activateDevMode(): void {\n    this.isDevMode = true;\n    document.body.classList.add('dev-mode-active');\n    \n    if (this.randomButton) {\n      this.randomButton.style.display = 'flex';\n    }\n    \n    this.startAutoDeactivateTimer();\n    this.showToast('🔧 Dev Mode Activated! Random button is now available. Click the × on the timer to exit early.', 'success');\n  }\n\n  private deactivateDevMode(): void {\n    this.isDevMode = false;\n    document.body.classList.remove('dev-mode-active');\n    \n    if (this.randomButton) {\n      this.randomButton.style.display = 'none';\n    }\n    \n    this.stopAutoDeactivateTimer();\n    this.showToast('🔧 Dev Mode Deactivated! Click 10 times on \"Ready to generate\" to reactivate.', 'info');\n  }\n\n  // Auto-Deactivation Methods\n  private startAutoDeactivateTimer(): void {\n    if (this.autoDeactivateTimer) {\n      clearTimeout(this.autoDeactivateTimer);\n    }\n    if (this.countdownInterval) {\n      clearInterval(this.countdownInterval);\n    }\n    \n    this.isAutoDeactivateActive = true;\n    this.showTimerDisplay();\n    \n    let remainingTime = this.autoDeactivateDuration;\n    \n    // Update display every second\n    this.countdownInterval = setInterval(() => {\n      remainingTime -= 1000;\n      this.updateTimerDisplay(remainingTime);\n      \n      if (remainingTime <= 0) {\n        clearInterval(this.countdownInterval!);\n        this.countdownInterval = null;\n      }\n    }, 1000);\n    \n    this.autoDeactivateTimer = setTimeout(() => {\n      this.deactivateDevMode();\n    }, this.autoDeactivateDuration);\n  }\n\n  private stopAutoDeactivateTimer(): void {\n    if (this.autoDeactivateTimer) {\n      clearTimeout(this.autoDeactivateTimer);\n      this.autoDeactivateTimer = null;\n    }\n    if (this.countdownInterval) {\n      clearInterval(this.countdownInterval);\n      this.countdownInterval = null;\n    }\n    this.isAutoDeactivateActive = false;\n    this.hideTimerDisplay();\n  }\n\n  private resetAutoDeactivateTimer(): void {\n    if (this.isAutoDeactivateActive && this.isDevMode) {\n      this.startAutoDeactivateTimer();\n    }\n  }\n\n  private showTimerDisplay(): void {\n    if (this.timerDisplay) {\n      this.timerDisplay.style.display = 'flex';\n    }\n  }\n\n  private hideTimerDisplay(): void {\n    if (this.timerDisplay) {\n      this.timerDisplay.style.display = 'none';\n    }\n  }\n\n  private updateTimerDisplay(remainingTime: number): void {\n    if (this.timerText) {\n      const minutes = Math.floor(remainingTime / 60000);\n      const seconds = Math.floor((remainingTime % 60000) / 1000);\n      this.timerText.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;\n    }\n  }\n\n  private generateRandomData(): void {\n    const randomData = {\n      fileName: this.getRandomFileName(),\n      project: this.getRandomProjectName(),\n      author: this.getRandomAuthor(),\n      version: this.getRandomVersion(),\n      description: this.getRandomDescription(),\n      creationDate: this.getRandomDate(),\n      lastUpdated: this.getRandomDate(),\n      license: this.getRandomLicense(),\n      status: this.getRandomStatus(),\n      usage: this.getRandomUsage(),\n      dependencies: this.getRandomDependencies(),\n      notes: this.getRandomNotes(),\n      todo: this.getRandomTodo()\n    };\n\n    // Fill all form fields\n    Object.entries(randomData).forEach(([key, value]) => {\n      const element = document.getElementById(key) as HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\n      if (element) {\n        if (element.type === 'checkbox') {\n          (element as HTMLInputElement).checked = Boolean(value);\n        } else {\n          element.value = String(value || '');\n          // Trigger change event to ensure form validation and preview update\n          element.dispatchEvent(new Event('change', { bubbles: true }));\n        }\n      } else {\n        console.warn(`Element with id \"${key}\" not found`);\n      }\n    });\n\n    // Update language to a random one\n    const languages = Object.keys(languageConfigs);\n    const randomLanguage = languages[Math.floor(Math.random() * languages.length)];\n    const languageSelect = document.getElementById('language') as HTMLSelectElement;\n    if (languageSelect && randomLanguage) {\n      languageSelect.value = randomLanguage;\n      this.currentLanguage = getLanguageById(randomLanguage) ?? null;\n      // Trigger change event for language selection\n      languageSelect.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n\n    // Update header type randomly\n    const headerTypeSelect = document.getElementById('headerType') as HTMLSelectElement;\n    if (headerTypeSelect) {\n      headerTypeSelect.value = Math.random() > 0.5 ? 'complete' : 'simple';\n    }\n\n    this.updatePreview();\n    this.saveFormData();\n    this.resetAutoDeactivateTimer();\n    this.showToast('🎲 Random data generated!', 'success');\n  }\n\n  // Random data generators\n  private getRandomFileName(): string {\n    const extensions = ['.js', '.ts', '.py', '.java', '.cpp', '.html', '.css', '.php', '.rb', '.go'];\n    const names = ['main', 'app', 'index', 'utils', 'helper', 'service', 'controller', 'model', 'view', 'config'];\n    const name = names[Math.floor(Math.random() * names.length)] || 'main';\n    const ext = extensions[Math.floor(Math.random() * extensions.length)] || '.js';\n    return `${name}${ext}`;\n  }\n\n  private getRandomProjectName(): string {\n    const adjectives = ['Awesome', 'Amazing', 'Incredible', 'Fantastic', 'Brilliant', 'Epic', 'Super', 'Ultimate', 'Pro', 'Advanced'];\n    const nouns = ['Project', 'App', 'Tool', 'System', 'Framework', 'Library', 'Engine', 'Platform', 'Solution', 'Application'];\n    const adj = adjectives[Math.floor(Math.random() * adjectives.length)] || 'Awesome';\n    const noun = nouns[Math.floor(Math.random() * nouns.length)] || 'Project';\n    return `${adj} ${noun} ${Math.floor(Math.random() * 1000)}`;\n  }\n\n  private getRandomAuthor(): string {\n    const firstNames = ['Alex', 'Jordan', 'Casey', 'Taylor', 'Morgan', 'Riley', 'Avery', 'Quinn', 'Sage', 'River'];\n    const lastNames = ['Smith', 'Johnson', 'Williams', 'Brown', 'Jones', 'Garcia', 'Miller', 'Davis', 'Rodriguez', 'Martinez'];\n    const firstName = firstNames[Math.floor(Math.random() * firstNames.length)] || 'John';\n    const lastName = lastNames[Math.floor(Math.random() * lastNames.length)] || 'Doe';\n    return `${firstName} ${lastName}`;\n  }\n\n  private getRandomVersion(): string {\n    const major = Math.floor(Math.random() * 5) + 1;\n    const minor = Math.floor(Math.random() * 20);\n    const patch = Math.floor(Math.random() * 100);\n    return `${major}.${minor}.${patch}`;\n  }\n\n  private getRandomDescription(): string {\n    const descriptions = [\n      'A powerful and efficient solution for modern development',\n      'An innovative tool that revolutionizes the way we work',\n      'A comprehensive system designed for optimal performance',\n      'A cutting-edge application with advanced features',\n      'A robust framework built for scalability and reliability',\n      'A user-friendly interface with intuitive design',\n      'A high-performance engine optimized for speed',\n      'A flexible platform that adapts to your needs'\n    ];\n    return descriptions[Math.floor(Math.random() * descriptions.length)] || 'A powerful and efficient solution for modern development';\n  }\n\n  private getRandomDate(): string {\n    const start = new Date(2020, 0, 1);\n    const end = new Date();\n    const randomDate = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n    const dateString = randomDate.toISOString().split('T')[0];\n    return dateString as string;\n  }\n\n  private getRandomLicense(): string {\n    const licenses = ['MIT', 'GPL-3.0', 'Apache-2.0', 'BSD-3-Clause', 'ISC', 'Unlicense', 'Custom'];\n    return licenses[Math.floor(Math.random() * licenses.length)] || 'MIT';\n  }\n\n  private getRandomStatus(): string {\n    const statuses = ['Development', 'Stable', 'Beta', 'Deprecated'];\n    return statuses[Math.floor(Math.random() * statuses.length)] || 'Development';\n  }\n\n\n  private getRandomUsage(): string {\n    const usages = [\n      'npm install && npm start',\n      'python main.py',\n      'java -jar app.jar',\n      'g++ -o app main.cpp && ./app',\n      'node index.js',\n      'docker run -p 3000:3000 app',\n      'git clone && cd project && make install'\n    ];\n    return usages[Math.floor(Math.random() * usages.length)] || 'npm install && npm start';\n  }\n\n  private getRandomDependencies(): string {\n    const dependencies = [\n      'react, express, mongoose',\n      'vue, axios, lodash',\n      'angular, rxjs, typescript',\n      'jquery, bootstrap, moment',\n      'lodash, moment, axios',\n      'express, cors, helmet',\n      'react-router, redux, styled-components'\n    ];\n    return dependencies[Math.floor(Math.random() * dependencies.length)] || 'react, express, mongoose';\n  }\n\n  private getRandomNotes(): string {\n    const notes = [\n      'This is a development version with experimental features',\n      'Performance optimized for large datasets',\n      'Includes comprehensive error handling',\n      'Built with modern best practices',\n      'Fully documented with JSDoc comments',\n      'Tested on multiple browsers and devices',\n      'Follows semantic versioning guidelines'\n    ];\n    return notes[Math.floor(Math.random() * notes.length)] || 'This is a development version with experimental features';\n  }\n\n  private getRandomTodo(): string {\n    const todos = [\n      'Add unit tests for all functions',\n      'Implement error logging system',\n      'Optimize database queries',\n      'Add user authentication',\n      'Create API documentation',\n      'Implement caching mechanism',\n      'Add internationalization support',\n      'Refactor legacy code',\n      'Add performance monitoring',\n      'Implement CI/CD pipeline'\n    ];\n    return todos[Math.floor(Math.random() * todos.length)] || 'Add unit tests for all functions';\n  }\n\n  // Options Modal Methods\n  private showOptionsModal(): void {\n    if (this.optionsModal) {\n      this.loadOptionsData();\n      this.optionsModal.style.display = 'flex';\n      document.body.style.overflow = 'hidden';\n    }\n  }\n\n  private closeOptionsModal(): void {\n    if (this.optionsModal) {\n      this.optionsModal.style.display = 'none';\n      document.body.style.overflow = '';\n    }\n  }\n\n  private switchOptionsTab(tabName: string): void {\n    // Update nav buttons\n    this.optionsNavBtns.forEach(btn => {\n      btn.classList.remove('active');\n    });\n    const activeBtn = document.querySelector(`[data-tab=\"${tabName}\"]`);\n    if (activeBtn) {\n      activeBtn.classList.add('active');\n    }\n\n    // Update tab content\n    this.optionsTabs.forEach(tab => {\n      tab.classList.remove('active');\n    });\n    const activeTab = document.getElementById(`${tabName}-tab`);\n    if (activeTab) {\n      activeTab.classList.add('active');\n    }\n  }\n\n  private loadOptionsData(): void {\n    // Load current preferences into the modal form\n    const fields = [\n      'defaultLanguage',\n      'defaultAuthor', \n      'defaultProject',\n      'defaultLicense',\n      'autoFillDates',\n      'rememberLastValues',\n      'showPreview',\n      'enableAnalytics',\n      'enableBetaFeatures'\n    ];\n\n    fields.forEach(field => {\n      const element = document.getElementById(field) as HTMLInputElement | HTMLSelectElement;\n      if (element) {\n        if (element.type === 'checkbox') {\n          (element as HTMLInputElement).checked = this.userPreferences[field as keyof UserPreferences] as boolean;\n        } else if (element.tagName === 'SELECT') {\n          element.value = this.userPreferences[field as keyof UserPreferences] as string;\n        } else {\n          element.value = this.userPreferences[field as keyof UserPreferences] as string;\n        }\n      }\n    });\n\n    // Set theme radio buttons\n    const themeRadios = document.querySelectorAll('input[name=\"theme\"]') as NodeListOf<HTMLInputElement>;\n    themeRadios.forEach(radio => {\n      radio.checked = radio.value === this.userPreferences.theme;\n    });\n  }\n\n  private async saveOptions(): Promise<void> {\n    try {\n      // Get form data from modal\n      const formData = this.getOptionsFormData();\n      \n      // Update user preferences\n      this.userPreferences = { ...this.userPreferences, ...formData };\n      \n      // Save to storage\n      await this.saveUserPreferences();\n      \n      // Apply theme changes immediately\n      this.setupTheme();\n      \n      // Close modal\n      this.closeOptionsModal();\n      \n      this.showToast('Settings saved successfully', 'success');\n    } catch (error) {\n      console.error('Error saving options:', error);\n      this.showToast('Failed to save settings', 'error');\n    }\n  }\n\n  private getOptionsFormData(): Partial<UserPreferences> {\n    return {\n      theme: (document.querySelector('input[name=\"theme\"]:checked') as HTMLInputElement)?.value as Theme || 'light',\n      defaultLanguage: (document.getElementById('defaultLanguage') as HTMLSelectElement)?.value || DEFAULT_VALUES.LANGUAGE,\n      defaultAuthor: (document.getElementById('defaultAuthor') as HTMLInputElement)?.value || DEFAULT_VALUES.AUTHOR,\n      defaultProject: (document.getElementById('defaultProject') as HTMLInputElement)?.value || DEFAULT_VALUES.PROJECT,\n      defaultLicense: (document.getElementById('defaultLicense') as HTMLSelectElement)?.value || DEFAULT_VALUES.LICENSE,\n      autoFillDates: (document.getElementById('autoFillDates') as HTMLInputElement)?.checked || true,\n      rememberLastValues: (document.getElementById('rememberLastValues') as HTMLInputElement)?.checked || true,\n      showPreview: (document.getElementById('showPreview') as HTMLInputElement)?.checked || true,\n      enableAnalytics: (document.getElementById('enableAnalytics') as HTMLInputElement)?.checked || false,\n      enableBetaFeatures: (document.getElementById('enableBetaFeatures') as HTMLInputElement)?.checked || false\n    };\n  }\n\n  private async exportSettings(): Promise<void> {\n    try {\n      const settings = {\n        version: '1.0.0',\n        timestamp: new Date().toISOString(),\n        preferences: this.userPreferences\n      };\n\n      const blob = new Blob([JSON.stringify(settings, null, 2)], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `headforge-settings-${new Date().toISOString().split('T')[0]}.json`;\n      link.style.display = 'none';\n      \n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      URL.revokeObjectURL(url);\n      \n      this.showToast('Settings exported successfully', 'success');\n    } catch (error) {\n      console.error('Error exporting settings:', error);\n      this.showToast('Failed to export settings', 'error');\n    }\n  }\n\n  private importSettings(): void {\n    this.importFileInput.click();\n  }\n\n  private async handleImportFile(event: Event): Promise<void> {\n    const target = event.target as HTMLInputElement;\n    const file = target.files?.[0];\n    \n    if (!file) return;\n\n    try {\n      const text = await file.text();\n      const settings = JSON.parse(text);\n      \n      if (!settings.preferences) {\n        throw new Error('Invalid settings file format');\n      }\n\n      // Validate and apply settings\n      const validPreferences = this.validateImportedSettings(settings.preferences);\n      this.userPreferences = { ...this.userPreferences, ...validPreferences };\n      \n      // Update the modal form\n      this.loadOptionsData();\n      \n      this.showToast('Settings imported successfully', 'success');\n    } catch (error) {\n      console.error('Error importing settings:', error);\n      this.showToast('Failed to import settings. Please check the file format.', 'error');\n    } finally {\n      target.value = '';\n    }\n  }\n\n  private validateImportedSettings(settings: any): Partial<UserPreferences> {\n    const validSettings: Partial<UserPreferences> = {};\n    \n    // Validate each setting\n    if (typeof settings.theme === 'string' && ['light', 'dark'].includes(settings.theme)) {\n      validSettings.theme = settings.theme;\n    }\n    \n    if (typeof settings.defaultLanguage === 'string') {\n      validSettings.defaultLanguage = settings.defaultLanguage;\n    }\n    \n    if (typeof settings.defaultAuthor === 'string') {\n      validSettings.defaultAuthor = settings.defaultAuthor;\n    }\n    \n    if (typeof settings.defaultProject === 'string') {\n      validSettings.defaultProject = settings.defaultProject;\n    }\n    \n    if (typeof settings.defaultLicense === 'string') {\n      validSettings.defaultLicense = settings.defaultLicense;\n    }\n    \n    if (typeof settings.autoFillDates === 'boolean') {\n      validSettings.autoFillDates = settings.autoFillDates;\n    }\n    \n    if (typeof settings.rememberLastValues === 'boolean') {\n      validSettings.rememberLastValues = settings.rememberLastValues;\n    }\n    \n    if (typeof settings.showPreview === 'boolean') {\n      validSettings.showPreview = settings.showPreview;\n    }\n    \n    if (typeof settings.enableAnalytics === 'boolean') {\n      validSettings.enableAnalytics = settings.enableAnalytics;\n    }\n    \n    if (typeof settings.enableBetaFeatures === 'boolean') {\n      validSettings.enableBetaFeatures = settings.enableBetaFeatures;\n    }\n    \n    return validSettings;\n  }\n\n  private async resetSettings(): Promise<void> {\n    this.showCustomConfirm(\n      'Are you sure you want to reset all settings to their default values? This action cannot be undone.',\n      () => {\n        try {\n          this.userPreferences = this.getDefaultPreferences();\n          this.loadOptionsData();\n          this.showToast('Settings reset to defaults', 'success');\n        } catch (error) {\n          console.error('Error resetting settings:', error);\n          this.showToast('Failed to reset settings', 'error');\n        }\n      }\n    );\n  }\n\n  public destroy(): void {\n    if (this.updateChecker) {\n      this.updateChecker.destroy();\n      this.updateChecker = null;\n    }\n  }\n\n}\n\n// Initialize the popup when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  new HeadForgePopup();\n});\n\"// Force recompile\" \n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t887: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkheadforge\"] = self[\"webpackChunkheadforge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [76], () => (__webpack_require__(149)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","STORAGE_KEYS","USER_PREFERENCES","LAST_HEADER_DATA","TEMPLATE_CUSTOMIZATIONS","EXPORT_HISTORY","THEME_SETTINGS","DEFAULT_VALUES","AUTHOR","PROJECT","VERSION","LICENSE","STATUS","PLATFORM","LANGUAGE","THEME","EXPORT_FORMAT","VALIDATION_LIMITS","MAX_FILENAME_LENGTH","MAX_DESCRIPTION_LENGTH","MAX_USAGE_LENGTH","MAX_NOTES_LENGTH","MAX_TODO_LENGTH","MAX_DEPENDENCIES_LENGTH","ERROR_MESSAGES","GENERIC_ERROR","VALIDATION_ERROR","EXPORT_ERROR","SAVE_ERROR","LOAD_ERROR","NETWORK_ERROR","PERMISSION_ERROR","STORAGE_ERROR","window","matchMedia","matches","DateUtils","getCurrentDate","formatDate","Date","formatDateTime","parseDate","isValidDateString","dateString","getRelativeDate","date","diffInMs","getTime","diffInDays","Math","floor","weeks","months","years","addDays","subtractDays","days","result","setDate","getDate","isDateInRange","startDate","endDate","getDateDifference","date1","date2","abs","getFullYear","String","getMonth","padStart","getHours","getMinutes","getSeconds","isNaN","async","copyToClipboard","text","chrome","runtime","id","fallbackCopyToClipboard","navigator","clipboard","isSecureContext","writeText","clipboardError","error","Error","message","Promise","resolve","reject","textArea","document","createElement","value","style","position","left","top","opacity","pointerEvents","zIndex","setAttribute","body","appendChild","focus","select","setSelectionRange","length","execCommand","contains","removeChild","ClipboardUtils","readFromClipboard","readText","copyImageToClipboard","imageBlob","clipboardItem","ClipboardItem","type","write","isClipboardSupported","isClipboardReadSupported","isClipboardWriteSupported","FileUtils","saveFile","content","filename","blob","Blob","url","URL","createObjectURL","link","href","download","click","revokeObjectURL","saveFileAsBlob","readFile","file","reader","FileReader","onload","event","target","onerror","readAsText","getFileExtension","isValidFileName","test","nameWithoutExt","getFileNameWithoutExtension","toUpperCase","includes","sanitizeFileName","sanitized","replace","extension","maxNameLength","substring","createBlob","downloadBlob","getFileSize","bytes","units","size","unitIndex","toFixed","formatFileSize","i","log","parseFloat","pow","lastDotIndex","lastIndexOf","toLowerCase","updateChecker","constructor","config","lastCheck","updateInfo","this","checkForUpdates","response","fetch","githubRepo","ok","status","release","json","latestVersion","tag_name","isNewer","isVersionNewer","currentVersion","version","releaseDate","published_at","downloadUrl","html_url","changelog","now","shouldCheckForUpdates","checkInterval","getUpdateInfo","version1","version2","v1Parts","split","map","Number","v2Parts","max","v1Part","v2Part","getUpdateStatus","hasUpdate","UpdateCheckerUI","container","updateButton","updateNotification","initialize","createUpdateButton","bindEvents","checkForUpdatesOnLoad","className","innerHTML","title","cssText","addEventListener","background","transform","showUpdateAvailable","silent","animation","showNotification","color","onclick","tabs","create","remove","textContent","setTimeout","destroy","head","HeadForgePopup","currentLanguage","userPreferences","getDefaultPreferences","isCopying","isDownloading","devModeClicks","isDevMode","autoDeactivateTimer","autoDeactivateDuration","isAutoDeactivateActive","countdownInterval","initializeElements","setupEventListeners","loadUserPreferences","populateLanguageOptions","setupTheme","loadLastFormData","initializeUpdateChecker","updatePreview","form","getElementById","themeToggle","settingsBtn","randomButton","headerContainer","generateBtn","clearBtn","copyBtn","downloadBtn","loadingOverlay","toastContainer","headerBanner","timerDisplay","timerText","querySelector","timerCloseBtn","optionsModal","optionsModalOverlay","closeOptionsModalBtn","cancelOptionsBtn","saveOptionsBtn","optionsNavBtns","querySelectorAll","optionsTabs","importFileInput","debounce","saveFormData","resetAutoDeactivateTimer","languageSelect","e","getLanguageById","creationDateInput","lastUpdatedInput","generateHeader","clearForm","downloadFile","toggleTheme","openSettings","statusText","handleDevModeClick","generateRandomData","deactivateDevMode","closeOptionsModal","saveOptions","forEach","btn","tabName","dataset","tab","switchOptionsTab","exportBtn","importBtn","resetBtn","exportSettings","importSettings","resetSettings","handleImportFile","handleKeyboardShortcuts","languageArray","Object","values","languageConfigs","Set","lang","category","optgroup","label","capitalizeFirst","filter","language","option","name","defaultLanguage","classList","theme","add","updateBanner","updateThemeIcon","src","saveUserPreferences","themeIcon","getFormData","formData","FormData","fileName","get","project","author","creationDate","lastUpdated","description","dependencies","license","usage","notes","todo","headerType","showLoading","validation","ValidationUtils","validateHeaderData","isValid","showValidationErrors","errors","templateEngine","removeAttribute","showToast","headerContent","trim","errorMessage","showCustomConfirm","reset","showOptionsModal","ctrlKey","metaKey","key","preventDefault","shiftKey","show","toggle","clearDuplicateToasts","toast","icon","getToastIcon","parentElement","messageElement","onConfirm","modal","cancelBtn","okBtn","display","handleCancel","removeEventListener","handleOk","handleEscape","overlay","handleOverlayClick","icons","success","warning","info","storage","sync","settings","extensionSettings","set","rememberLastValues","local","data","populateForm","entries","element","defaultAuthor","defaultProject","defaultLicense","autoFillDates","exportFormat","showPreview","str","charAt","slice","func","wait","timeout","args","clearTimeout","apply","activateDevMode","startAutoDeactivateTimer","stopAutoDeactivateTimer","clearInterval","showTimerDisplay","remainingTime","setInterval","updateTimerDisplay","hideTimerDisplay","minutes","seconds","toString","randomData","getRandomFileName","getRandomProjectName","getRandomAuthor","getRandomVersion","getRandomDescription","getRandomDate","getRandomLicense","getRandomStatus","getRandomUsage","getRandomDependencies","getRandomNotes","getRandomTodo","checked","Boolean","dispatchEvent","Event","bubbles","languages","keys","randomLanguage","random","headerTypeSelect","extensions","names","adjectives","nouns","firstNames","lastNames","descriptions","start","end","toISOString","licenses","statuses","usages","todos","loadOptionsData","overflow","activeBtn","activeTab","field","tagName","radio","getOptionsFormData","enableAnalytics","enableBetaFeatures","timestamp","preferences","JSON","stringify","files","parse","validPreferences","validateImportedSettings","validSettings","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","d","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}