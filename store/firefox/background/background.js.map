{"version":3,"file":"background/background.js","mappings":"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","sources":["webpack://headforge/webpack/runtime/load script","webpack://headforge/./src/utils/constants.ts","webpack://headforge/webpack/bootstrap","webpack://headforge/webpack/runtime/define property getters","webpack://headforge/webpack/runtime/ensure chunk","webpack://headforge/webpack/runtime/get javascript chunk filename","webpack://headforge/webpack/runtime/get mini-css chunk filename","webpack://headforge/webpack/runtime/global","webpack://headforge/webpack/runtime/hasOwnProperty shorthand","webpack://headforge/webpack/runtime/publicPath","webpack://headforge/webpack/runtime/jsonp chunk loading","webpack://headforge/./src/background/background.ts"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"headforge:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export const EXTENSION_NAME = 'HeadForge';\nexport const EXTENSION_VERSION = '1.0.0';\nexport const EXTENSION_AUTHOR = 'Satoshiba';\n\n// Storage keys\nexport const STORAGE_KEYS = {\n  USER_PREFERENCES: 'headforge_user_preferences',\n  LAST_HEADER_DATA: 'headforge_last_header_data',\n  TEMPLATE_CUSTOMIZATIONS: 'headforge_template_customizations',\n  EXPORT_HISTORY: 'headforge_export_history',\n  THEME_SETTINGS: 'headforge_theme_settings'\n} as const;\n\n// Default values\nexport const DEFAULT_VALUES = {\n  AUTHOR: 'Satoshiba',\n  PROJECT: 'SYNCLY - YouTube PVR Extension',\n  VERSION: '1.0.0',\n  LICENSE: 'MIT',\n  STATUS: 'Development',\n  PLATFORM: ['Chrome', 'Firefox', 'Edge', 'Brave'],\n  LANGUAGE: 'javascript',\n  THEME: 'light' as const,\n  EXPORT_FORMAT: 'clipboard' as const\n} as const;\n\n// License options\nexport const LICENSE_OPTIONS = [\n  { value: 'MIT', label: 'MIT License' },\n  { value: 'GPL-3.0', label: 'GNU General Public License v3.0' },\n  { value: 'Apache-2.0', label: 'Apache License 2.0' },\n  { value: 'BSD-3-Clause', label: 'BSD 3-Clause License' },\n  { value: 'ISC', label: 'ISC License' },\n  { value: 'Unlicense', label: 'The Unlicense' },\n  { value: 'Custom', label: 'Custom License' }\n] as const;\n\n// Status options\nexport const STATUS_OPTIONS = [\n  { value: 'Development', label: 'Development' },\n  { value: 'Stable', label: 'Stable' },\n  { value: 'Beta', label: 'Beta' },\n  { value: 'Deprecated', label: 'Deprecated' },\n  { value: 'Maintenance', label: 'Maintenance' }\n] as const;\n\n// Platform options\nexport const PLATFORM_OPTIONS = [\n  { value: 'Chrome', label: 'Chrome' },\n  { value: 'Firefox', label: 'Firefox' },\n  { value: 'Edge', label: 'Edge' },\n  { value: 'Brave', label: 'Brave' }\n] as const;\n\n\n// Export format options\nexport const EXPORT_FORMAT_OPTIONS = [\n  { value: 'clipboard', label: 'Copy to Clipboard' },\n  { value: 'file', label: 'Save as File' },\n  { value: 'insert', label: 'Insert into Editor' }\n] as const;\n\n// UI Constants\nexport const UI_CONSTANTS = {\n  POPUP_WIDTH: 400,\n  POPUP_HEIGHT: 600,\n  MAX_PREVIEW_LINES: 20,\n  ANIMATION_DURATION: 300,\n  DEBOUNCE_DELAY: 500\n} as const;\n\n// Validation limits\nexport const VALIDATION_LIMITS = {\n  MAX_FILENAME_LENGTH: 255,\n  MAX_DESCRIPTION_LENGTH: 1000,\n  MAX_USAGE_LENGTH: 2000,\n  MAX_NOTES_LENGTH: 1000,\n  MAX_TODO_LENGTH: 1000,\n  MAX_DEPENDENCIES_LENGTH: 500\n} as const;\n\n// File extensions mapping\nexport const FILE_EXTENSIONS = {\n  javascript: '.js',\n  typescript: '.ts',\n  html: '.html',\n  css: '.css',\n  scss: '.scss',\n  jsx: '.jsx',\n  tsx: '.tsx',\n  vue: '.vue',\n  python: '.py',\n  java: '.java',\n  csharp: '.cs',\n  cpp: '.cpp',\n  c: '.c',\n  go: '.go',\n  rust: '.rs',\n  php: '.php',\n  ruby: '.rb',\n  nodejs: '.js',\n  kotlin: '.kt',\n  swift: '.swift',\n  sql: '.sql',\n  graphql: '.graphql',\n  dockerfile: 'Dockerfile',\n  yaml: '.yml',\n  json: '.json',\n  bash: '.sh',\n  powershell: '.ps1',\n  r: '.r',\n  lua: '.lua',\n  perl: '.pl',\n  haskell: '.hs'\n} as const;\n\n// Message types for communication between components\nexport const MESSAGE_TYPES = {\n  GENERATE_HEADER: 'GENERATE_HEADER',\n  EXPORT_HEADER: 'EXPORT_HEADER',\n  SAVE_PREFERENCES: 'SAVE_PREFERENCES',\n  LOAD_PREFERENCES: 'LOAD_PREFERENCES',\n  UPDATE_THEME: 'UPDATE_THEME',\n  VALIDATE_DATA: 'VALIDATE_DATA',\n  GET_LANGUAGES: 'GET_LANGUAGES',\n  GET_TEMPLATE: 'GET_TEMPLATE'\n} as const;\n\n// Error messages\nexport const ERROR_MESSAGES = {\n  GENERIC_ERROR: 'An unexpected error occurred',\n  VALIDATION_ERROR: 'Please check your input and try again',\n  EXPORT_ERROR: 'Failed to export header',\n  SAVE_ERROR: 'Failed to save preferences',\n  LOAD_ERROR: 'Failed to load preferences',\n  NETWORK_ERROR: 'Network error occurred',\n  PERMISSION_ERROR: 'Permission denied',\n  STORAGE_ERROR: 'Storage error occurred'\n} as const;\n\n// Success messages\nexport const SUCCESS_MESSAGES = {\n  HEADER_GENERATED: 'Header generated successfully',\n  HEADER_COPIED: 'Header copied to clipboard',\n  HEADER_SAVED: 'Header saved successfully',\n  PREFERENCES_SAVED: 'Preferences saved successfully',\n  EXPORT_SUCCESS: 'Export completed successfully'\n} as const;\n\n// CSS class names\nexport const CSS_CLASSES = {\n  THEME_LIGHT: 'theme-light',\n  THEME_DARK: 'theme-dark',\n  // THEME_AUTO removed - only light and dark themes now\n  ANIMATION_FADE_IN: 'fade-in',\n  ANIMATION_SLIDE_UP: 'slide-up',\n  ANIMATION_BOUNCE: 'bounce',\n  LOADING: 'loading',\n  ERROR: 'error',\n  SUCCESS: 'success',\n  WARNING: 'warning'\n} as const;\n\n// Keyboard shortcuts\nexport const KEYBOARD_SHORTCUTS = {\n  GENERATE: 'Ctrl+Enter',\n  COPY: 'Ctrl+C',\n  SAVE: 'Ctrl+S',\n  NEW: 'Ctrl+N',\n  PREVIEW: 'Ctrl+P'\n} as const;\n\n// API endpoints (for future use)\nexport const API_ENDPOINTS = {\n  TEMPLATES: '/api/templates',\n  LANGUAGES: '/api/languages',\n  VALIDATE: '/api/validate',\n  EXPORT: '/api/export'\n} as const;\n\n// Feature flags\nexport const FEATURE_FLAGS = {\n  ENABLE_CLOUD_SYNC: false,\n  ENABLE_TEAM_TEMPLATES: false,\n  ENABLE_ANALYTICS: false,\n  ENABLE_BETA_FEATURES: false\n} as const;\n\n// Default settings\n// Function to detect system theme preference\nconst getSystemTheme = (): 'light' | 'dark' => {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  }\n  return 'light'; // fallback\n};\n\nexport const DEFAULT_SETTINGS = {\n  theme: getSystemTheme(),\n  fontSize: 'medium' as const,\n  popupWidth: 400,\n  popupHeight: 600,\n  compactMode: false,\n  showPreview: true,\n  animations: true,\n  highContrast: false,\n  accentColor: '#007bff',\n  debugMode: false,\n  performanceMonitoring: false,\n  cacheSize: 10,\n  maxHistory: 100,\n  autoSave: true,\n  autoSaveDelay: 1000,\n  experimentalFeatures: false,\n  telemetry: false,\n  updateFrequency: 'weekly' as const,\n  backupFrequency: 'monthly' as const,\n  strictValidation: false,\n  timeoutDuration: 5000,\n  maxRetries: 3,\n  defaultLicense: 'MIT',\n  defaultLanguage: 'javascript',\n  exportFormat: 'clipboard' as const,\n  autoFillDates: true,\n  rememberLastValues: true,\n  defaultAuthor: '',\n  defaultProject: '',\n  autoDeactivateDuration: 180000 // 3 minutes in milliseconds\n} as const;\n\n// Default header data\nexport const DEFAULT_HEADER_DATA = {\n  fileName: '',\n  project: '',\n  author: '',\n  creationDate: '',\n  lastUpdated: '',\n  version: '1.0.0',\n  description: '',\n  dependencies: '',\n  license: 'MIT',\n  status: 'Development',\n  language: 'javascript',\n  usage: '',\n  notes: '',\n  todo: '',\n  headerType: 'simple' as const\n} as const;\n\n// Licenses\nexport const LICENSES = [\n  'MIT',\n  'GPL-3.0',\n  'Apache-2.0',\n  'BSD-3-Clause',\n  'ISC',\n  'Unlicense',\n  'Custom'\n] as const;\n\n\n// Platforms\nexport const PLATFORMS = [\n  'Chrome',\n  'Firefox',\n  'Edge',\n  'Brave'\n] as const;\n\n// Export options\nexport const EXPORT_OPTIONS = [\n  'clipboard',\n  'file',\n  'insert'\n] as const;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + \"common\" + \"/\" + \"common\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t471: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkheadforge\"] = self[\"webpackChunkheadforge\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import { Message } from '@/types';\nimport { MESSAGE_TYPES } from '@/utils/constants';\n\nclass HeadForgeBackground {\n  private browserAPI: any;\n\n  constructor() {\n    this.browserAPI = this.getBrowserAPI();\n    this.setupMessageListener();\n    this.setupInstallListener();\n    this.setupUpdateListener();\n  }\n\n  private getBrowserAPI(): any {\n    const browser = (globalThis as any).browser || chrome;\n    \n    return {\n      storage: {\n        local: {\n          get: (keys?: string | string[] | object) => \n            new Promise((resolve) => browser.storage.local.get(keys, resolve)),\n          set: (items: object) => \n            new Promise((resolve) => browser.storage.local.set(items, resolve)),\n          remove: (keys: string | string[]) => \n            new Promise((resolve) => browser.storage.local.remove(keys, resolve)),\n          clear: () => \n            new Promise((resolve) => browser.storage.local.clear(resolve))\n        },\n        sync: {\n          get: (keys?: string | string[] | object) => \n            new Promise((resolve) => browser.storage.sync.get(keys, resolve)),\n          set: (items: object) => \n            new Promise((resolve) => browser.storage.sync.set(items, resolve)),\n          remove: (keys: string | string[]) => \n            new Promise((resolve) => browser.storage.sync.remove(keys, resolve)),\n          clear: () => \n            new Promise((resolve) => browser.storage.sync.clear(resolve))\n        }\n      },\n      clipboard: {\n        writeText: (text: string) => \n          new Promise((resolve, reject) => {\n            if (browser.clipboard && browser.clipboard.writeText) {\n              browser.clipboard.writeText(text).then(resolve).catch(reject);\n            } else {\n              reject(new Error('Clipboard API not available'));\n            }\n          })\n      },\n      tabs: {\n        query: (queryInfo: any) => \n          new Promise((resolve) => browser.tabs.query(queryInfo, resolve)),\n        sendMessage: (tabId: number, message: any) => \n          new Promise((resolve, reject) => {\n            browser.tabs.sendMessage(tabId, message, (response: any) => {\n              if (browser.runtime.lastError) {\n                reject(browser.runtime.lastError);\n              } else {\n                resolve(response);\n              }\n            });\n          })\n      },\n      runtime: {\n        sendMessage: (message: any) => \n          new Promise((resolve, reject) => {\n            browser.runtime.sendMessage(message, (response: any) => {\n              if (browser.runtime.lastError) {\n                reject(browser.runtime.lastError);\n              } else {\n                resolve(response);\n              }\n            });\n          }),\n        onMessage: {\n          addListener: (callback: (message: any, sender: any, sendResponse: any) => void) => {\n            browser.runtime.onMessage.addListener(callback);\n          },\n          removeListener: (callback: (message: any, sender: any, sendResponse: any) => void) => {\n            browser.runtime.onMessage.removeListener(callback);\n          }\n        },\n        onInstalled: {\n          addListener: (callback: (details: any) => void) => {\n            browser.runtime.onInstalled.addListener(callback);\n          }\n        },\n        onStartup: {\n          addListener: (callback: () => void) => {\n            browser.runtime.onStartup.addListener(callback);\n          }\n        }\n      } as any\n    };\n  }\n\n  private setupMessageListener(): void {\n    this.browserAPI.runtime.onMessage.addListener((message: Message, sender: any, sendResponse: any) => {\n      this.handleMessage(message, sender, sendResponse);\n      return true; // Keep message channel open for async response\n    });\n  }\n\n  private async handleMessage(message: Message, sender: any, sendResponse: (response?: any) => void): Promise<void> {\n    try {\n      let response: any;\n\n      switch (message.type) {\n        case MESSAGE_TYPES.GENERATE_HEADER:\n          response = await this.handleGenerateHeader(message.payload);\n          break;\n\n        case MESSAGE_TYPES.EXPORT_HEADER:\n          response = await this.handleExportHeader(message.payload);\n          break;\n\n        case MESSAGE_TYPES.SAVE_PREFERENCES:\n          response = await this.handleSavePreferences(message.payload);\n          break;\n\n        case MESSAGE_TYPES.LOAD_PREFERENCES:\n          response = await this.handleLoadPreferences();\n          break;\n\n        case MESSAGE_TYPES.UPDATE_THEME:\n          response = await this.handleUpdateTheme(message.payload);\n          break;\n\n        case MESSAGE_TYPES.VALIDATE_DATA:\n          response = await this.handleValidateData(message.payload);\n          break;\n\n        case MESSAGE_TYPES.GET_LANGUAGES:\n          response = await this.handleGetLanguages();\n          break;\n\n        case MESSAGE_TYPES.GET_TEMPLATE:\n          response = await this.handleGetTemplate(message.payload);\n          break;\n\n        default:\n          response = { error: 'Unknown message type' };\n      }\n\n      sendResponse(response);\n    } catch (error) {\n      console.error('Error handling message:', error);\n      sendResponse({ error: error instanceof Error ? error.message : 'Unknown error' });\n    }\n  }\n\n  private async handleGenerateHeader(payload: any): Promise<any> {\n    try {\n      // Import template engine dynamically to avoid circular dependencies\n      const { templateEngine } = await import('../utils/template-engine');\n      const { getLanguageById } = await import('../utils/language-configs');\n      \n      const { headerData, languageId } = payload;\n      const language = getLanguageById(languageId);\n      \n      if (!language) {\n        throw new Error('Language not found');\n      }\n\n      const headerContent = templateEngine.generateHeader(headerData, language);\n      \n      return {\n        success: true,\n        headerContent,\n        language\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  private async handleExportHeader(payload: any): Promise<any> {\n    try {\n      const { headerContent, exportOptions } = payload;\n      \n      switch (exportOptions.format) {\n        case 'clipboard':\n          await this.browserAPI.clipboard.writeText(headerContent);\n          return { success: true, message: 'Header copied to clipboard' };\n\n        case 'file':\n          // File download is handled in the popup/content script\n          return { success: true, message: 'File download initiated' };\n\n        case 'insert':\n          // Insert into editor is handled by content script\n          return { success: true, message: 'Header insertion initiated' };\n\n        default:\n          throw new Error('Unknown export format');\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  private async handleSavePreferences(payload: any): Promise<any> {\n    try {\n      await this.browserAPI.storage.sync.set({\n        userPreferences: payload\n      });\n      \n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  private async handleLoadPreferences(): Promise<any> {\n    try {\n      const result = await this.browserAPI.storage.sync.get('userPreferences');\n      return {\n        success: true,\n        preferences: (result as any).userPreferences || {}\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  private async handleUpdateTheme(payload: any): Promise<any> {\n    try {\n      const { theme } = payload;\n      \n      // Update theme in storage\n      await this.browserAPI.storage.sync.set({\n        theme\n      });\n\n      // Notify all tabs about theme change\n      const tabs = await this.browserAPI.tabs.query({});\n      tabs.forEach((tab: any) => {\n        if (tab.id) {\n          this.browserAPI.tabs.sendMessage(tab.id, {\n            type: 'THEME_CHANGED',\n            payload: { theme }\n          }).catch(() => {\n            // Ignore errors for tabs that don't have content scripts\n          });\n        }\n      });\n\n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  private async handleValidateData(payload: any): Promise<any> {\n    try {\n      const { ValidationUtils } = await import('../utils/validation');\n      const validation = ValidationUtils.validateHeaderData(payload);\n      \n      return {\n        success: true,\n        validation\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  private async handleGetLanguages(): Promise<any> {\n    try {\n      const { languageConfigs } = await import('../utils/language-configs');\n      \n      return {\n        success: true,\n        languages: languageConfigs\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  private async handleGetTemplate(payload: any): Promise<any> {\n    try {\n      const { getLanguageById } = await import('../utils/language-configs');\n      const { templateEngine } = await import('../utils/template-engine');\n      \n      const { languageId, headerData } = payload;\n      const language = getLanguageById(languageId);\n      \n      if (!language) {\n        throw new Error('Language not found');\n      }\n\n      const template = language.template;\n      const preview = templateEngine.generateHeader(headerData, language);\n      \n      return {\n        success: true,\n        template,\n        preview,\n        language\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  private setupInstallListener(): void {\n    this.browserAPI.runtime.onInstalled.addListener((details: any) => {\n      if (details.reason === 'install') {\n        this.handleInstall();\n      } else if (details.reason === 'update') {\n        this.handleUpdate(details.previousVersion);\n      }\n    });\n  }\n\n  private async handleInstall(): Promise<void> {\n    try {\n      // Set default preferences\n      const defaultPreferences = {\n        theme: window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light',\n        defaultLanguage: 'javascript',\n        defaultAuthor: 'Satoshiba',\n        defaultProject: 'SYNCLY - YouTube PVR Extension',\n        defaultLicense: 'MIT',\n        autoFillDates: true,\n        rememberLastValues: true,\n        exportFormat: 'clipboard',\n        showPreview: true\n      };\n\n      await this.browserAPI.storage.sync.set({\n        userPreferences: defaultPreferences\n      });\n\n      // Open welcome page or show notification\n      console.log('HeadForge extension installed successfully');\n    } catch (error) {\n      console.error('Error during installation:', error);\n    }\n  }\n\n  private async handleUpdate(previousVersion?: string): Promise<void> {\n    try {\n      console.log(`HeadForge updated from ${previousVersion} to ${chrome.runtime.getManifest().version}`);\n      \n      // Handle any migration logic here\n      await this.migrateData(previousVersion);\n    } catch (error) {\n      console.error('Error during update:', error);\n    }\n  }\n\n  private async migrateData(previousVersion?: string): Promise<void> {\n    // Add migration logic for different versions\n    if (!previousVersion) return;\n\n    // Example migration logic\n    if (this.isVersionLessThan(previousVersion, '1.1.0')) {\n      // Migrate data from version < 1.1.0 to 1.1.0\n      console.log('Migrating data for version 1.1.0');\n    }\n  }\n\n  private isVersionLessThan(version1: string, version2: string): boolean {\n    const v1Parts = version1.split('.').map(Number);\n    const v2Parts = version2.split('.').map(Number);\n    \n    for (let i = 0; i < Math.max(v1Parts.length, v2Parts.length); i++) {\n      const v1Part = v1Parts[i] || 0;\n      const v2Part = v2Parts[i] || 0;\n      \n      if (v1Part < v2Part) return true;\n      if (v1Part > v2Part) return false;\n    }\n    \n    return false;\n  }\n\n  private setupUpdateListener(): void {\n    // Listen for extension updates\n    this.browserAPI.runtime.onStartup.addListener(() => {\n      console.log('HeadForge extension started');\n    });\n  }\n}\n\n// Initialize the background script\nnew HeadForgeBackground();\n"],"names":["inProgress","dataWebpackPrefix","VALIDATION_LIMITS","MAX_FILENAME_LENGTH","MAX_DESCRIPTION_LENGTH","MAX_USAGE_LENGTH","MAX_NOTES_LENGTH","MAX_TODO_LENGTH","MAX_DEPENDENCIES_LENGTH","MESSAGE_TYPES","GENERATE_HEADER","EXPORT_HEADER","SAVE_PREFERENCES","LOAD_PREFERENCES","UPDATE_THEME","VALIDATE_DATA","GET_LANGUAGES","GET_TEMPLATE","window","matchMedia","matches","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","miniCssF","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","call","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","type","target","head","appendChild","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","test","Error","replace","p","installedChunks","j","installedChunkData","promise","resolve","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","self","constructor","browserAPI","getBrowserAPI","setupMessageListener","setupInstallListener","setupUpdateListener","browser","chrome","storage","local","set","items","remove","clear","sync","clipboard","writeText","text","then","catch","tabs","query","queryInfo","sendMessage","tabId","response","lastError","onMessage","addListener","callback","removeListener","onInstalled","onStartup","sender","sendResponse","handleMessage","handleGenerateHeader","payload","handleExportHeader","handleSavePreferences","handleLoadPreferences","handleUpdateTheme","handleValidateData","handleGetLanguages","handleGetTemplate","templateEngine","getLanguageById","headerData","languageId","language","success","headerContent","generateHeader","exportOptions","format","userPreferences","preferences","theme","tab","ValidationUtils","validation","validateHeaderData","languageConfigs","languages","template","preview","details","reason","handleInstall","handleUpdate","previousVersion","defaultPreferences","defaultLanguage","defaultAuthor","defaultProject","defaultLicense","autoFillDates","rememberLastValues","exportFormat","showPreview","migrateData","isVersionLessThan","version1","version2","v1Parts","split","map","Number","v2Parts","Math","max","v1Part","v2Part"],"sourceRoot":""}