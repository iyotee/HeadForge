name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      prerelease:
        description: 'Mark as prerelease'
        type: boolean
        default: false

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Run linter
      run: npm run lint
      
    - name: Build extension
      run: npm run build
      
    - name: Build store packages
      run: node scripts/build-stores.js
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ github.run_number }}
        path: |
          dist/
          store/
        retention-days: 30
        
    - name: Create store packages
      run: |
        mkdir -p release-packages
        cp store/chrome/headforge-chrome.zip release-packages/
        cp store/firefox/headforge-firefox.zip release-packages/
        cp store/edge/headforge-edge.zip release-packages/
        
    - name: Create .crx files for direct installation
      run: |
        node scripts/create-crx-files.js
        
    - name: Generate release notes
      id: release-notes
      run: |
        # Get the tag name
        TAG_NAME=${GITHUB_REF#refs/tags/}
        
        # Generate release notes
        cat > release-notes.md << EOF
        ## What's New in $TAG_NAME
        
        ### 🚀 Features
        - Enhanced code header generation
        - Improved template system
        - Better cross-browser compatibility
        
        ### 🐛 Bug Fixes
        - Fixed template formatting issues
        - Resolved clipboard functionality
        - Improved update checker
        
        ### 📦 Downloads
        
        **For Direct Installation (Recommended for Users):**
        - **Chrome**: Download `headforge-chrome.crx` and drag to chrome://extensions/
        - **Edge**: Download `headforge-edge.crx` and drag to edge://extensions/
        - **Firefox**: Download `headforge-firefox.xpi` and drag to about:addons
        
        **For Store Submission (Developers/Partners):**
        - **Chrome Web Store**: Use `headforge-chrome.zip`
        - **Firefox Add-ons**: Use `headforge-firefox.zip`
        - **Microsoft Edge**: Use `headforge-edge.zip`
        
        ### 📋 Installation Instructions
        
        **Direct Installation (.crx/.xpi files):**
        1. Download the install file for your browser (.crx for Chrome/Edge, .xpi for Firefox)
        2. Open your browser's extension page:
           - Chrome: chrome://extensions/
           - Edge: edge://extensions/
           - Firefox: about:addons
        3. Drag and drop the file onto the page
        4. Click "Add extension" when prompted
        
        **Developer Installation (.zip files):**
        1. Download the ZIP file for your browser
        2. Extract the ZIP file
        3. Open your browser's extension management page
        4. Enable "Developer mode"
        5. Click "Load unpacked" and select the extracted folder
        
        ### 🔧 Development
        - Source code: [GitHub Repository](https://github.com/satoshiba/headforge)
        - Issues: [Report a bug](https://github.com/satoshiba/headforge/issues)
        - Documentation: [Wiki](https://github.com/satoshiba/headforge/wiki)
        
        ---
        
        **Full Changelog**: https://github.com/satoshiba/headforge/compare/$TAG_NAME...HEAD
        EOF
        
        # Output the release notes
        echo "notes<<EOF" >> $GITHUB_OUTPUT
        cat release-notes.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: HeadForge ${{ github.ref_name }}
        body: ${{ steps.release-notes.outputs.notes }}
        files: |
          release-packages/headforge-chrome.zip
          release-packages/headforge-firefox.zip
          release-packages/headforge-edge.zip
          release-packages/headforge-chrome.crx
          release-packages/headforge-firefox.xpi
          release-packages/headforge-edge.crx
        draft: false
        prerelease: ${{ github.event.inputs.prerelease == 'true' }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Trigger Store Submission
      if: success()
      run: |
        echo "🎉 Release created successfully!"
        echo "📦 Store submission will be triggered automatically"
        echo "🔄 Users will receive automatic updates through their browsers"
        
    - name: Notify Discord
      if: success()
      uses: Ilshidur/action-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      with:
        args: |
          🎉 **HeadForge ${{ github.ref_name }} Released!**
          
          📦 **Downloads Available:**
          • [Chrome Web Store](https://chrome.google.com/webstore/detail/headforge/your-extension-id)
          • [Firefox Add-ons](https://addons.mozilla.org/en-US/firefox/addon/headforge/)
          • [Microsoft Edge](https://microsoftedge.microsoft.com/addons/detail/headforge/your-extension-id)
          
          🔗 **Repository:** https://github.com/satoshiba/headforge
          📋 **Changelog:** https://github.com/satoshiba/headforge/releases/tag/${{ github.ref_name }}
          
    - name: Update Extension Stores
      if: success()
      run: |
        echo "🚀 Release ${{ github.ref_name }} completed successfully!"
        echo "📦 Store packages created:"
        echo "  - Chrome: headforge-chrome.zip"
        echo "  - Firefox: headforge-firefox.zip"
        echo "  - Edge: headforge-edge.zip"
        echo ""
        echo "📋 Next steps:"
        echo "1. Upload packages to respective stores"
        echo "2. Update store descriptions if needed"
        echo "3. Monitor for user feedback"
        echo "4. Prepare next release"
        
    - name: Cleanup
      if: always()
      run: |
        rm -rf release-packages/
        rm -f release-notes.md