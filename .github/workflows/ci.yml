name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run TypeScript type check
      run: npm run type-check
      
    - name: Run Prettier check
      run: npx prettier --check src/**/*.{ts,js,css,html}
      
    - name: Run unit tests
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    needs: code-quality
    
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      
    - name: Package extension for ${{ matrix.browser }}
      run: npm run package:${{ matrix.browser }}
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: headforge-${{ matrix.browser }}-build
        path: |
          dist/${{ matrix.browser }}/
          packages/headforge-${{ matrix.browser }}-*.zip
        retention-days: 30
        
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
      continue-on-error: true
      
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: headforge-chrome-build
        path: dist/
        
    - name: Setup Chrome for testing
      uses: browser-actions/setup-chrome@v1
      
    - name: Run integration tests
      run: npm run test:integration
      
  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: headforge-chrome-build
        path: dist/
        
    - name: Run performance tests
      run: npm run test:performance
      
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: performance-results/
        retention-days: 30
        
  cross-browser:
    name: Cross-Browser Tests
    runs-on: ubuntu-latest
    needs: build
    
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: headforge-${{ matrix.browser }}-build
        path: dist/
        
    - name: Setup ${{ matrix.browser }}
      uses: browser-actions/setup-${{ matrix.browser }}@v1
      
    - name: Run cross-browser tests
      run: npm run test:cross-browser -- --browser=${{ matrix.browser }}
      
  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: headforge-chrome-build
        path: dist/
        
    - name: Run accessibility tests
      run: npm run test:accessibility
      
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [build, security, integration-tests]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: headforge-chrome-build
        path: dist/
        
    - name: Deploy to preview environment
      run: |
        echo "Deploying preview for PR #${{ github.event.number }}"
        # Add deployment logic here
        
    - name: Comment PR with preview link
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Preview deployed! You can test the extension at: [Preview Link]'
          })
